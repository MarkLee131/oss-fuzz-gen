<!doctype html>

<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>Experiment results</title>
<style>
* {
    box-sizing: border-box;
}

html {
    line-height: 1.15;
}

body {
    font-family: sans-serif;
    font-size: 16px;
}

table {
    border-collapse: collapse;
    border-spacing: 0;
}

td, th {
    border-right: 1px #dedede solid;
    border-bottom: 1px #dedede solid;
    padding: 5px;
    text-align: left;
}
td:first-child, th:first-child {
    border-left: 1px #dedede solid;
}
th {
    border-top: 1px #dedede solid;
}

tbody tr:nth-child(odd) {
    background-color: #f4f5ff;
}
</style>
<body>
    LLM:

<h1>output-libplist-plist_from_memory / 02</h1>
Bug: False
<br>
Crash reason: NO_SEMANTIC_ERR
<br>
<br>




<h3>Final code</h3>

<pre>
#include &lt;fuzzer/FuzzedDataProvider.h&gt;
#include &lt;plist/plist.h&gt;
#include &lt;cstdint&gt;
#include &lt;cstddef&gt;
#include &lt;cstring&gt;
#include &lt;cstdlib&gt;
#include &lt;vector&gt;

extern &#34;C&#34; int LLVMFuzzerInitialize(int *argc, char ***argv) {
    return 0;
}

extern &#34;C&#34; int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
    FuzzedDataProvider fuzzed_data(data, size);

    // Consume the remaining bytes as a vector of chars
    std::vector&lt;char&gt; plist_data = fuzzed_data.ConsumeRemainingBytes&lt;char&gt;();
    uint32_t length = static_cast&lt;uint32_t&gt;(plist_data.size());

    plist_t plist = nullptr;
    plist_format_t format = PLIST_FORMAT_NONE;

    // Pass the data as a raw pointer and use the length of the vector
    plist_err_t result = plist_from_memory(plist_data.data(), length, &amp;plist, &amp;format);

    if (plist) {
        plist_free(plist);
    }

    return 0;
}
</pre>


<h3>Fixer prompt #1</h3>
<pre>

Given the following C++ fuzz harness and its build error message, fix the code to make it build for fuzzing.

If there is undeclared identifier or unknown type name error, fix it by finding and including the related libraries.

Note that some code may need to be wrapped with &lt;code&gt;extern &#34;C&#34;&lt;/code&gt; as their source is C program.

MUST RETURN THE FULL CODE, INCLUDING UNCHANGED PARTS.
EXTREMELY IMPORTANT: AVOID USING &lt;code&gt;goto&lt;/code&gt;. If you have to write code using &lt;code&gt;goto&lt;/code&gt;, you MUST MUST also declare all variables BEFORE the &lt;code&gt;goto&lt;/code&gt;. Never introduce new variables after the &lt;code&gt;goto&lt;/code&gt;.

Below is the code needs to be built:
&lt;code&gt;
#include &lt;fuzzer/FuzzedDataProvider.h&gt;
#include &lt;plist/plist.h&gt;
#include &lt;cstdint&gt;
#include &lt;cstddef&gt;
#include &lt;cstring&gt;
#include &lt;cstdlib&gt;

extern &#34;C&#34; int LLVMFuzzerInitialize(int *argc, char ***argv) {
    return 0;
}

extern &#34;C&#34; int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
    FuzzedDataProvider fuzzed_data(data, size);

    const char *plist_data = fuzzed_data.ConsumeRemainingBytes&lt;char&gt;();
    uint32_t length = fuzzed_data.ConsumeIntegral&lt;uint32_t&gt;();

    plist_t plist = nullptr;
    plist_format_t format = PLIST_FORMAT_NONE;

    plist_err_t result = plist_from_memory(plist_data, length, &amp;plist, &amp;format);

    if (plist) {
        plist_free(plist);
    }

    return 0;
}
&lt;/code&gt;

The code has the following build issues:
&lt;error&gt;
fuzz/oplist_fuzzer.cc:15:17: error: no viable conversion from &#39;std::vector&lt;char&gt;&#39; to &#39;const char *&#39;
   15 |     const char *plist_data = fuzzed_data.ConsumeRemainingBytes&lt;char&gt;();
      |                 ^            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
&lt;/error&gt;

Fix code:
1. Consider possible solutions for the issues listed above.
2. Choose a solution that can maximize fuzzing result, which is utilizing the function under test and feeding it not null input.
3. Apply the solutions to the original code.
It&#39;s important to show the complete code, not only the fixed line.
&lt;solution&gt;
</pre>



<h3>Code #1</h3>

<pre>
Here is the fixed code with the necessary adjustments to address the build error and ensure proper functioning:

```cpp
#include &lt;fuzzer/FuzzedDataProvider.h&gt;
#include &lt;plist/plist.h&gt;
#include &lt;cstdint&gt;
#include &lt;cstddef&gt;
#include &lt;cstring&gt;
#include &lt;cstdlib&gt;
#include &lt;vector&gt;

extern &#34;C&#34; int LLVMFuzzerInitialize(int *argc, char ***argv) {
    return 0;
}

extern &#34;C&#34; int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
    FuzzedDataProvider fuzzed_data(data, size);

    // Consume the remaining bytes as a vector of chars
    std::vector&lt;char&gt; plist_data = fuzzed_data.ConsumeRemainingBytes&lt;char&gt;();
    uint32_t length = static_cast&lt;uint32_t&gt;(plist_data.size());

    plist_t plist = nullptr;
    plist_format_t format = PLIST_FORMAT_NONE;

    // Pass the data as a raw pointer and use the length of the vector
    plist_err_t result = plist_from_memory(plist_data.data(), length, &amp;plist, &amp;format);

    if (plist) {
        plist_free(plist);
    }

    return 0;
}
```

### Explanation of Changes:
1. **Include `&lt;vector&gt;`**: Added the necessary include for `std::vector`.
2. **Change `ConsumeRemainingBytes` Usage**: Instead of directly assigning the result of `ConsumeRemainingBytes&lt;char&gt;()` to a `const char*`, we store it in a `std::vector&lt;char&gt;`.
3. **Use `data()` and `size()`**: When calling `plist_from_memory`, we pass the raw pointer to the data using `plist_data.data()` and the length using `plist_data.size()`.

This ensures that the data passed to `plist_from_memory` is not null and correctly represents the input data.
</pre>


<h2>Logs</h2>
<pre>
Fixing /home/kaixuan/FDG_LLM/oss-fuzz-gen/results/output-libplist-plist_from_memory/fixed_targets/02.cc with gpt-4o, attempt 1.
Successfully built /home/kaixuan/FDG_LLM/oss-fuzz-gen/results/output-libplist-plist_from_memory/fixed_targets/02.cc with gpt-4o in 1 iterations of fixing.
Result for libplist-plist_from_memory-02: crashes=False, coverage=0.16199376947040497 (624/3852), coverage diff=0.006412005457025921 (47/7330)

</pre>

<h2>Run logs</h2>
<pre>
INFO:__main__:Running: docker run --rm --privileged --shm-size=2g --platform linux/amd64 -e FUZZING_ENGINE=libfuzzer -e SANITIZER=address -e RUN_FUZZER_MODE=interactive -e HELPER=True -v /home/kaixuan/FDG_LLM/oss-fuzz-gen/results/output-libplist-plist_from_memory/corpora/02.cc:/tmp/oplist_fuzzer_corpus -v /tmp/tmp9gg1c8dt/build/out/libplist-plist_from_memory-02:/out -t gcr.io/oss-fuzz-base/base-runner run_fuzzer oplist_fuzzer -print_final_stats=1 -max_total_time=30 -len_control=0 -timeout=30.
vm.mmap_rnd_bits = 28
rm: cannot remove &#39;/tmp/oplist_fuzzer_corpus&#39;: Device or resource busy
Using seed corpus: oplist_fuzzer_seed_corpus.zip
/out/oplist_fuzzer -rss_limit_mb=2560 -timeout=25 -print_final_stats=1 -max_total_time=30 -len_control=0 -timeout=30 /tmp/oplist_fuzzer_corpus -max_len=4096 -dict=oplist.dict &lt; /dev/null
Dictionary: 41 entries
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 2103949746
INFO: Loaded 1 modules   (3852 inline 8-bit counters): 3852 [0x5594ffa79728, 0x5594ffa7a634),
INFO: Loaded 1 PC tables (3852 PCs): 3852 [0x5594ffa7a638,0x5594ffa896f8),
INFO:        3 files found in /tmp/oplist_fuzzer_corpus
INFO: seed corpus: files: 3 min: 341b max: 566b total: 1368b rss: 30Mb
#4	INITED cov: 154 ft: 306 corp: 3/1368b exec/s: 0 rss: 31Mb
#5	NEW    cov: 164 ft: 334 corp: 4/2294b lim: 4096 exec/s: 0 rss: 32Mb L: 926/926 MS: 1 CopyPart-
#6	NEW    cov: 165 ft: 350 corp: 5/2755b lim: 4096 exec/s: 0 rss: 32Mb L: 461/926 MS: 1 ShuffleBytes-
#9	NEW    cov: 166 ft: 376 corp: 6/3170b lim: 4096 exec/s: 0 rss: 32Mb L: 415/926 MS: 3 InsertRepeatedBytes-ChangeBinInt-EraseBytes-
#11	NEW    cov: 166 ft: 413 corp: 7/3585b lim: 4096 exec/s: 0 rss: 32Mb L: 415/926 MS: 2 ChangeBit-CopyPart-
#20	NEW    cov: 166 ft: 416 corp: 8/4072b lim: 4096 exec/s: 0 rss: 32Mb L: 487/926 MS: 4 ChangeBit-InsertRepeatedBytes-ChangeASCIIInt-ManualDict- DE: &#34;,\&#34;\&#34;&#34;-
#21	NEW    cov: 166 ft: 475 corp: 9/4414b lim: 4096 exec/s: 0 rss: 32Mb L: 342/926 MS: 1 InsertByte-
#23	NEW    cov: 169 ft: 479 corp: 10/4875b lim: 4096 exec/s: 0 rss: 32Mb L: 461/926 MS: 2 ChangeBit-ChangeBinInt-
#24	NEW    cov: 169 ft: 501 corp: 11/5801b lim: 4096 exec/s: 0 rss: 32Mb L: 926/926 MS: 1 CrossOver-
#25	NEW    cov: 169 ft: 526 corp: 12/6087b lim: 4096 exec/s: 0 rss: 32Mb L: 286/926 MS: 1 EraseBytes-
#37	NEW    cov: 169 ft: 537 corp: 13/6549b lim: 4096 exec/s: 0 rss: 32Mb L: 462/926 MS: 2 CopyPart-InsertByte-
#44	NEW    cov: 169 ft: 538 corp: 14/7010b lim: 4096 exec/s: 0 rss: 32Mb L: 461/926 MS: 2 ChangeBit-CMP- DE: &#34;\000\030&#34;-
#47	NEW    cov: 169 ft: 540 corp: 15/8244b lim: 4096 exec/s: 0 rss: 32Mb L: 1234/1234 MS: 3 PersAutoDict-InsertByte-CrossOver- DE: &#34;,\&#34;\&#34;&#34;-
#68	NEW    cov: 169 ft: 541 corp: 16/8978b lim: 4096 exec/s: 0 rss: 33Mb L: 734/1234 MS: 1 CopyPart-
#80	NEW    cov: 169 ft: 566 corp: 17/9440b lim: 4096 exec/s: 0 rss: 33Mb L: 462/1234 MS: 2 ChangeASCIIInt-ChangeByte-
#81	NEW    cov: 169 ft: 567 corp: 18/9901b lim: 4096 exec/s: 0 rss: 33Mb L: 461/1234 MS: 1 CMP- DE: &#34;\315\001\000\000&#34;-
#87	NEW    cov: 169 ft: 583 corp: 19/10341b lim: 4096 exec/s: 0 rss: 33Mb L: 440/1234 MS: 1 CrossOver-
#90	NEW    cov: 169 ft: 589 corp: 20/10894b lim: 4096 exec/s: 0 rss: 33Mb L: 553/1234 MS: 3 ChangeBit-InsertRepeatedBytes-PersAutoDict- DE: &#34;,\&#34;\&#34;&#34;-
#96	NEW    cov: 169 ft: 595 corp: 21/11460b lim: 4096 exec/s: 0 rss: 33Mb L: 566/1234 MS: 1 ChangeBinInt-
#97	NEW    cov: 169 ft: 611 corp: 22/12980b lim: 4096 exec/s: 0 rss: 33Mb L: 1520/1520 MS: 1 CrossOver-
#104	NEW    cov: 169 ft: 617 corp: 23/14000b lim: 4096 exec/s: 0 rss: 33Mb L: 1020/1520 MS: 2 CMP-InsertRepeatedBytes- DE: &#34;\027\000\000\000\000\000\000\000&#34;-
#105	NEW    cov: 169 ft: 621 corp: 24/14195b lim: 4096 exec/s: 0 rss: 33Mb L: 195/1520 MS: 1 EraseBytes-
#111	REDUCE cov: 169 ft: 621 corp: 24/14003b lim: 4096 exec/s: 0 rss: 33Mb L: 223/1520 MS: 1 EraseBytes-
#117	NEW    cov: 169 ft: 622 corp: 25/14404b lim: 4096 exec/s: 0 rss: 33Mb L: 401/1520 MS: 1 EraseBytes-
#120	REDUCE cov: 169 ft: 622 corp: 25/14376b lim: 4096 exec/s: 0 rss: 33Mb L: 459/1520 MS: 3 ManualDict-CrossOver-EraseBytes- DE: &#34;,{}&#34;-
#136	NEW    cov: 169 ft: 623 corp: 26/14841b lim: 4096 exec/s: 0 rss: 33Mb L: 465/1520 MS: 1 PersAutoDict- DE: &#34;\315\001\000\000&#34;-
#138	NEW    cov: 170 ft: 624 corp: 27/15304b lim: 4096 exec/s: 0 rss: 33Mb L: 463/1520 MS: 2 ChangeASCIIInt-ManualDict- DE: &#34;\\f&#34;-
#139	NEW    cov: 172 ft: 631 corp: 28/15870b lim: 4096 exec/s: 0 rss: 34Mb L: 566/1520 MS: 1 CopyPart-
#151	NEW    cov: 172 ft: 640 corp: 29/16Kb lim: 4096 exec/s: 0 rss: 34Mb L: 1175/1520 MS: 2 CrossOver-ManualDict- DE: &#34;&#39;&#39;&#34;-
#161	NEW    cov: 172 ft: 641 corp: 30/17Kb lim: 4096 exec/s: 0 rss: 34Mb L: 507/1520 MS: 5 InsertRepeatedBytes-ChangeASCIIInt-EraseBytes-ShuffleBytes-CrossOver-
#163	NEW    cov: 172 ft: 642 corp: 31/17Kb lim: 4096 exec/s: 0 rss: 34Mb L: 492/1520 MS: 2 CopyPart-CMP- DE: &#34;test&#34;-
#186	NEW    cov: 172 ft: 643 corp: 32/18Kb lim: 4096 exec/s: 0 rss: 34Mb L: 463/1520 MS: 3 InsertByte-InsertByte-CopyPart-
#188	NEW    cov: 172 ft: 644 corp: 33/18Kb lim: 4096 exec/s: 0 rss: 34Mb L: 907/1520 MS: 2 ManualDict-CrossOver- DE: &#34;{{}}&#34;-
#194	NEW    cov: 172 ft: 645 corp: 34/19Kb lim: 4096 exec/s: 0 rss: 34Mb L: 461/1520 MS: 1 CrossOver-
#210	NEW    cov: 173 ft: 649 corp: 35/19Kb lim: 4096 exec/s: 0 rss: 34Mb L: 462/1520 MS: 1 ManualDict- DE: &#34;\\&#34;-
#212	REDUCE cov: 173 ft: 649 corp: 35/19Kb lim: 4096 exec/s: 0 rss: 34Mb L: 791/1234 MS: 2 ShuffleBytes-EraseBytes-
#214	NEW    cov: 173 ft: 653 corp: 36/19Kb lim: 4096 exec/s: 0 rss: 34Mb L: 202/1234 MS: 2 CopyPart-EraseBytes-
#215	REDUCE cov: 173 ft: 653 corp: 36/18Kb lim: 4096 exec/s: 0 rss: 34Mb L: 700/1175 MS: 1 EraseBytes-
#232	REDUCE cov: 173 ft: 653 corp: 36/18Kb lim: 4096 exec/s: 0 rss: 34Mb L: 407/1175 MS: 2 ShuffleBytes-EraseBytes-
#243	REDUCE cov: 173 ft: 653 corp: 36/18Kb lim: 4096 exec/s: 0 rss: 34Mb L: 585/1175 MS: 1 EraseBytes-
#248	REDUCE cov: 173 ft: 653 corp: 36/18Kb lim: 4096 exec/s: 0 rss: 34Mb L: 367/1175 MS: 5 ChangeByte-ChangeBit-ChangeByte-ChangeBit-EraseBytes-
#274	REDUCE cov: 173 ft: 653 corp: 36/18Kb lim: 4096 exec/s: 0 rss: 35Mb L: 731/1175 MS: 1 EraseBytes-
#275	REDUCE cov: 173 ft: 653 corp: 36/18Kb lim: 4096 exec/s: 0 rss: 35Mb L: 732/1175 MS: 1 EraseBytes-
#276	NEW    cov: 174 ft: 656 corp: 37/18Kb lim: 4096 exec/s: 0 rss: 35Mb L: 463/1175 MS: 1 ChangeBinInt-
#283	NEW    cov: 174 ft: 658 corp: 38/18Kb lim: 4096 exec/s: 0 rss: 35Mb L: 524/1175 MS: 2 ChangeASCIIInt-InsertRepeatedBytes-
#302	NEW    cov: 175 ft: 659 corp: 39/19Kb lim: 4096 exec/s: 0 rss: 35Mb L: 291/1175 MS: 4 ChangeBit-ChangeBinInt-CrossOver-EraseBytes-
#309	NEW    cov: 175 ft: 675 corp: 40/19Kb lim: 4096 exec/s: 0 rss: 35Mb L: 274/1175 MS: 2 InsertRepeatedBytes-InsertRepeatedBytes-
#310	NEW    cov: 175 ft: 676 corp: 41/20Kb lim: 4096 exec/s: 0 rss: 35Mb L: 610/1175 MS: 1 InsertRepeatedBytes-
#326	REDUCE cov: 175 ft: 676 corp: 41/20Kb lim: 4096 exec/s: 0 rss: 35Mb L: 257/1175 MS: 1 EraseBytes-
#360	NEW    cov: 175 ft: 687 corp: 42/20Kb lim: 4096 exec/s: 0 rss: 35Mb L: 566/1175 MS: 4 ChangeBinInt-CMP-ChangeByte-ChangeByte- DE: &#34;\004\000\000\000&#34;-
#361	NEW    cov: 175 ft: 690 corp: 43/21Kb lim: 4096 exec/s: 0 rss: 35Mb L: 610/1175 MS: 1 CopyPart-
#366	REDUCE cov: 175 ft: 691 corp: 44/22Kb lim: 4096 exec/s: 0 rss: 35Mb L: 1049/1175 MS: 5 ChangeBinInt-ManualDict-ChangeBinInt-CopyPart-ManualDict- DE: &#34;\\n&#34;-&#34;/**/&#34;-
#388	REDUCE cov: 175 ft: 691 corp: 44/22Kb lim: 4096 exec/s: 0 rss: 35Mb L: 243/1175 MS: 2 ChangeBinInt-EraseBytes-
#389	REDUCE cov: 175 ft: 691 corp: 44/22Kb lim: 4096 exec/s: 0 rss: 35Mb L: 240/1175 MS: 1 EraseBytes-
#396	NEW    cov: 175 ft: 693 corp: 45/22Kb lim: 4096 exec/s: 0 rss: 35Mb L: 689/1175 MS: 2 CrossOver-ManualDict- DE: &#34;\&#34;\&#34;&#34;-
#397	REDUCE cov: 175 ft: 695 corp: 46/23Kb lim: 4096 exec/s: 0 rss: 36Mb L: 731/1175 MS: 1 ChangeBinInt-
#403	NEW    cov: 175 ft: 697 corp: 47/23Kb lim: 4096 exec/s: 0 rss: 36Mb L: 473/1175 MS: 1 ManualDict- DE: &#34;\\uD800\\uDC00&#34;-
#404	REDUCE cov: 175 ft: 697 corp: 47/23Kb lim: 4096 exec/s: 0 rss: 36Mb L: 653/1175 MS: 1 EraseBytes-
#406	NEW    cov: 176 ft: 698 corp: 48/24Kb lim: 4096 exec/s: 0 rss: 36Mb L: 195/1175 MS: 2 ShuffleBytes-ShuffleBytes-
#415	REDUCE cov: 176 ft: 698 corp: 4
...truncated...
001\000\000&#34; # Uses: 204
&#34;Some UTF8 string&#34; # Uses: 200
&#34;Some Sdring with Unicode en&#34; # Uses: 197
&#34;\001\000&#34; # Uses: 232
&#34;\377\377\377\377\377\377\001{&#34; # Uses: 192
&#34;\377\377\377\377\377\377\377\000&#34; # Uses: 195
&#34;{\002\000\000&#34; # Uses: 178
&#34;\000\000&#34; # Uses: 226
&#34;\000\000\000\000&#34; # Uses: 205
&#34;Some UTF8 strin\020\020&#34; # Uses: 205
&#34;\001\000\000\000\000\000\000\215&#34; # Uses: 219
&#34;\021\000&#34; # Uses: 217
&#34;\001\005&#34; # Uses: 210
&#34;\376\377\377\375&#34; # Uses: 205
&#34;\377\377\377\377&#34; # Uses: 180
&#34;4\004\000\000\000\000\000\000&#34; # Uses: 205
&#34;\237\001\000\000\000\000\000\000&#34; # Uses: 195
&#34;\000\000\000\006&#34; # Uses: 203
&#34;\001n&#34; # Uses: 221
&#34;Some Int&#34; # Uses: 195
&#34;\001\000\000\000\000\000\000\000&#34; # Uses: 212
&#34;ASeco&#34; # Uses: 172
&#34;CFirstKey&#34; # Uses: 189
&#34;L\000\000\000\000\000\000\000&#34; # Uses: 177
&#34;\021\001\000\000\000\000\000\000&#34; # Uses: 198
&#34;c\002\000\000\000\000\000\000&#34; # Uses: 195
&#34;`Keys&#34; # Uses: 198
&#34;Some UTF8 strings&#34; # Uses: 184
&#34;\347\003\000\000&#34; # Uses: 204
&#34;\000\000\002c&#34; # Uses: 195
&#34;\000\000\000\315&#34; # Uses: 195
&#34;Some ,{}II string&#34; # Uses: 194
&#34;\001\000\000\001&#34; # Uses: 207
&#34;\377\377\377\026&#34; # Uses: 176
&#34;\251\002\000\000\000\000\000\000&#34; # Uses: 193
&#34;)\000&#34; # Uses: 195
&#34;\377\377\000\330&#34; # Uses: 200
&#34;\001\000\000\000\000\000\001\336&#34; # Uses: 220
&#34;j\000&#34; # Uses: 178
&#34;\035\000\000\000\000\000\000\000&#34; # Uses: 183
&#34;CSecondKe&#34; # Uses: 188
&#34;\377\013&#34; # Uses: 212
&#34;\001\000\000\000\000\000\002\022&#34; # Uses: 171
&#34;Some Sdring with&#34; # Uses: 206
&#34;AFirstKey&#34; # Uses: 168
&#34;E\000\000\000&#34; # Uses: 184
&#34;\001\000\000\000\000\000\000e&#34; # Uses: 186
&#34;null&#34; # Uses: 177
&#34;Some &#34; # Uses: 215
&#34;fa&#34; # Uses: 193
&#34;&lt;\001\000\000&#34; # Uses: 184
&#34;\377\3778 stri&#34; # Uses: 174
&#34;P\001\000\000\000\000\000\000&#34; # Uses: 183
&#34;\000\000\000\000\000\000\000\000&#34; # Uses: 177
&#34;\000\000\001\001&#34; # Uses: 189
&#34;\377\377\001l&#34; # Uses: 209
&#34;\000\000\000\000\000\000\001\010&#34; # Uses: 190
&#34;\000\000\000\000\000\000\001\313&#34; # Uses: 184
&#34;\377\377\002\350&#34; # Uses: 183
&#34;\015\013&#34; # Uses: 185
&#34;\377\377\001\037&#34; # Uses: 178
&#34;\001\000\000\000\000\000\000\001&#34; # Uses: 197
&#34;\001\000\000\000\000\000\002\301&#34; # Uses: 174
&#34;\377\377\377\377\377\377\000*&#34; # Uses: 204
&#34;foo&#34; # Uses: 177
&#34;\377\377\377\377\377\377\377[&#34; # Uses: 193
&#34;\376\377\377\376&#34; # Uses: 169
&#34;\000\346&#34; # Uses: 193
&#34;\376\377\377\377&#34; # Uses: 190
&#34;\374\377\377\377&#34; # Uses: 191
&#34;\355\225\234\352\265\255\354\226\264/\354\241\260\354\204\240\353&#34; # Uses: 148
&#34;\261\000&#34; # Uses: 156
&#34;ASecondKey&#34; # Uses: 156
&#34;\000\000\000\344&#34; # Uses: 153
&#34;\377\377\377\377\377\377\000\&#34;&#34; # Uses: 167
&#34;\377T&#34; # Uses: 155
&#34;\377\377\377\377\377\377\377r&#34; # Uses: 145
&#34;*\000\000\000\000\000\000\000&#34; # Uses: 133
&#34;\236\000\000\000\000\000\000\000&#34; # Uses: 166
&#34;Some I,0&#34; # Uses: 155
&#34;p\001&#34; # Uses: 175
&#34;tr&#34; # Uses: 169
&#34;\346\227\245\346\234\254\350\252\236&#34; # Uses: 150
&#34;\001\000\000\000&#34; # Uses: 146
&#34;\377\377\0007&#34; # Uses: 167
&#34;false&#34; # Uses: 172
&#34;M\006\000\000\000\000\000\000&#34; # Uses: 170
&#34;mor&#34; # Uses: 168
&#34;\002\000\000\000\000\000\000\000&#34; # Uses: 148
&#34;\000\000\000&gt;&#34; # Uses: 130
&#34;\020\005\000\000\000\000\000\000&#34; # Uses: 145
&#34;[\000&#34; # Uses: 156
&#34;\001\000\000\000\000\000\0003&#34; # Uses: 149
&#34;\377\377\377%&#34; # Uses: 148
&#34;\377\377\377\015&#34; # Uses: 175
&#34;S   FuuDI string&#34; # Uses: 146
&#34;=\000\000\000\000\000\000\000&#34; # Uses: 118
&#34;\355\225\234\352\234\254\350\252\317&#34; # Uses: 150
&#34;Some ASC&#34; # Uses: 165
&#34;\017\221&#34; # Uses: 169
&#34;\377\377\377\377\377\377\000\325&#34; # Uses: 140
&#34;\346\227d\245\346\234\254\350\252\236&#34; # Uses: 131
&#34;\007\000\000\000&#34; # Uses: 148
&#34;\001\331&#34; # Uses: 149
&#34;\003\001\000\000&#34; # Uses: 149
&#34;y\000\000\000&#34; # Uses: 141
&#34;\001\000\000\233&#34; # Uses: 159
&#34;\032\000\000\000\000\000\000\000&#34; # Uses: 118
&#34;Some Sdring with &#34; # Uses: 137
&#34;Some Sdrin&#34; # Uses: 139
&#34;\377\254&#34; # Uses: 138
&#34;\011\000&#34; # Uses: 128
&#34;\000\000\000\000\000\000\000\006&#34; # Uses: 129
&#34;T\002\000\000&#34; # Uses: 132
&#34;&lt;{\012  \&#34;S &#34; # Uses: 128
&#34;TF7 stri&#34; # Uses: 122
&#34;b\000\000\000\000\000\000\000&#34; # Uses: 137
&#34;\377\025&#34; # Uses: 146
&#34;&lt;\001\377,JJJJ&#34; # Uses: 147
&#34;\001\313&#34; # Uses: 143
&#34;\000\000\002\270&#34; # Uses: 156
&#34;Some Som&#34; # Uses: 153
&#34;\377\377\377\377\377\377\377#&#34; # Uses: 134
&#34;\272\001\000\000\000\000\000\000&#34; # Uses: 136
&#34;c\002&#34; # Uses: 129
&#34;\000\000\000\000\000\000\000\031&#34; # Uses: 121
&#34;\377\377\377\377\377\377\377Y&#34; # Uses: 102
&#34;\372\013\000\000\000\000\000\000&#34; # Uses: 132
&#34;\012\000&#34; # Uses: 130
&#34;\000\000\000\000\000\000\000]&#34; # Uses: 112
&#34;ASe&#34; # Uses: 109
&#34;\364\001&#34; # Uses: 121
&#34;\001\000\000\000\000\000\000\261&#34; # Uses: 109
&#34;\001\000\000\000\000\000\007M&#34; # Uses: 138
&#34;F\000\000\000&#34; # Uses: 123
&#34;\000\000\000\011&#34; # Uses: 95
&#34;\000\000\000\376&#34; # Uses: 113
&#34;9\000\000\000&#34; # Uses: 112
&#34;\377\377\377\377\377\377\377\016&#34; # Uses: 130
&#34;!\013\377&#34; # Uses: 101
&#34;\377\377\377\377\377\377\004\030&#34; # Uses: 110
&#34;\203\002\000\000\000\000\000\000&#34; # Uses: 119
&#34;0.25;&#34; # Uses: 105
&#34;tru&#34; # Uses: 99
&#34;!DOCTYPE&#34; # Uses: 121
&#34;\232\013\000\000\000\000\000\000&#34; # Uses: 101
&#34;\010\000&#34; # Uses: 103
&#34;\247\000\000\000\000\000\000\000&#34; # Uses: 117
&#34;\000\000\000\000\000\000\000\024&#34; # Uses: 95
&#34;\000\000\000\364&#34; # Uses: 100
&#34;\200\377\377\377\377\377\377\377&#34; # Uses: 85
&#34;\020\000\000\000&#34; # Uses: 84
&#34;!--&#34; # Uses: 108
&#34;\006\015\000\000\000\000\000\000&#34; # Uses: 79
&#34;33333&#34; # Uses: 89
&#34;\000\000\000\031&#34; # Uses: 105
&#34;\001\000\000\000\000\000\0123&#34; # Uses: 94
&#34;\001\000\002Y&#34; # Uses: 104
&#34;C Int&#34; # Uses: 95
&#34;\000\000\003\350&#34; # Uses: 106
&#34;M\002\000\000\000\000\000\000&#34; # Uses: 83
&#34;\377?&#34; # Uses: 83
&#34;$\000&#34; # Uses: 98
&#34;\0061&#34; # Uses: 98
&#34;Some Sdring with U&#34; # Uses: 73
&#34;\376\000\000\000\000\000\000\000&#34; # Uses: 71
&#34;\001\000\000\000\000\000\000]&#34; # Uses: 77
&#34;?&gt;&#34; # Uses: 108
&#34;!\013\377\377\377%\&#34;\&#34;&#34; # Uses: 83
&#34;=1&#34; # Uses: 80
&#34;--&gt;&#34; # Uses: 87
&#34;\005\000&#34; # Uses: 84
&#34; \000\000\000\000\000\000\000&#34; # Uses: 91
&#34;st&#34; # Uses: 76
&#34;\010\000\000\000&#34; # Uses: 79
&#34;--&#34; # Uses: 62
&#34;\347\003&#34; # Uses: 74
&#34;\010\000\000\000\000\000\000\000&#34; # Uses: 65
&#34;\377\377\377\010&#34; # Uses: 78
&#34;fal&#34; # Uses: 72
&#34;t\000\000\000\000\000\000\000&#34; # Uses: 71
&#34;P\000\000\000&#34; # Uses: 73
&#34;So}e ASCI&#34; # Uses: 54
&#34;\272\000\000\000\000\000\000\000&#34; # Uses: 60
&#34;\001\000\000\000\000\000\000\022&#34; # Uses: 61
&#34;\001\000\000\000\000\000\002&gt;&#34; # Uses: 68
&#34;tSo&#34; # Uses: 60
&#34;@\000\000\000\000\000\000\000&#34; # Uses: 52
&#34;\377\003&#34; # Uses: 45
&#34;!\003\377&#34; # Uses: 55
&#34;\001\000\000\000\000\000\000\025&#34; # Uses: 42
&#34;\273\000\000\000\000\000\000\000&#34; # Uses: 51
&#34;\271\000\000\000\000\000\000\000&#34; # Uses: 49
&#34;\000\000\000\000\000\000\017\377&#34; # Uses: 51
&#34;\000\000\000\000\000\000\000Y&#34; # Uses: 57
&#34;\013G&#34; # Uses: 42
&#34;&lt;\003\000\000\000\000\000\000&#34; # Uses: 50
&#34;*\000&#34; # Uses: 65
&#34;\377\377\377\377\377\377\377s&#34; # Uses: 57
&#34;&gt; &#34; # Uses: 53
&#34;\020\000&#34; # Uses: 48
&#34;\377\021&#34; # Uses: 46
&#34;true&#34; # Uses: 44
&#34;\003\350&#34; # Uses: 44
&#34;.\000\000\000\000\000\000\000&#34; # Uses: 52
&#34;\027\000&#34; # Uses: 48
&#34;o\000\000\000\000\000\000\000&#34; # Uses: 43
&#34;\000\035&#34; # Uses: 31
&#34;\000\000\000\000\000\000\000d&#34; # Uses: 41
&#34;\000\000\000\000\000\000\000\002&#34; # Uses: 35
&#34;\000\000\000`&#34; # Uses: 29
&#34;\377\377\377\377\377\377\0035&#34; # Uses: 35
&#34;\301\000\000\000\000\000\000\000&#34; # Uses: 31
&#34;33&#34; # Uses: 29
&#34;\000\000\000\000\000\000\000e&#34; # Uses: 37
&#34;\206\000\000\000\000\000\000\000&#34; # Uses: 28
&#34;\000\000\000\000\000\000\000\200&#34; # Uses: 36
&#34;\362\000\000\000&#34; # Uses: 32
&#34;\001\010&#34; # Uses: 32
&#34;\351\003\000\000&#34; # Uses: 33
&#34;9\000&#34; # Uses: 26
&#34;Q\001&#34; # Uses: 29
&#34;\020\247&#34; # Uses: 27
&#34;!=&#34; # Uses: 24
&#34;\377\377\377V&#34; # Uses: 28
&#34;\004\350&#34; # Uses: 13
&#34;\306\306&#34; # Uses: 21
&#34;\360\377\377\377&#34; # Uses: 21
&#34;g\000&#34; # Uses: 12
&#34;\320\000&#34; # Uses: 8
&#34;\000\000\000\000\000\000\000\001&#34; # Uses: 7
&#34;A#&#34; # Uses: 9
&#34;\256\000\000\000\000\000\000\000&#34; # Uses: 3
&#34;\377\007&#34; # Uses: 7
&#34;\377\377\377\377\377\377\377\206&#34; # Uses: 7
&#34;\002\245&#34; # Uses: 0
&#34;\377X&#34; # Uses: 3
&#34;I\000&#34; # Uses: 0
&#34;\000\026&#34; # Uses: 0
###### End of recommended dictionary. ######
Done 510821 runs in 31 second(s)
stat::number_of_executed_units: 510821
stat::average_exec_per_sec:     16478
stat::new_units_added:          5574
stat::slowest_unit_time_sec:    0
stat::peak_rss_mb:              76

</pre>

</body>