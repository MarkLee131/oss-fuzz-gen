"functions":
# - "name": "GetStructFromStdINCHI"
#   "params":
#   - "name": "inpInChI"
#     "type": "struct tagINCHI_InputINCHI *"
#   - "name": "outStruct"
#     "type": "struct tagINCHI_OutputStruct *"
#   "return_type": "int"
#   "signature": "int GetStructFromStdINCHI(inchi_InputINCHI *, inchi_OutputStruct *)"
# - "name": "GetINCHI"
#   "params":
#   - "name": "inp"
#     "type": "struct tagINCHI_Input *"
#   - "name": "out"
#     "type": "struct tagINCHI_Output *"
#   "return_type": "int"
#   "signature": "int GetINCHI(inchi_Input *, inchi_Output *)"
# - "name": "GetStdINCHI"
#   "params":
#   - "name": "inp"
#     "type": "struct tagINCHI_Input *"
#   - "name": "out"
#     "type": "struct tagINCHI_Output *"
#   "return_type": "int"
#   "signature": "int GetStdINCHI(inchi_Input *, inchi_Output *)"
# - "name": "GetINCHIEx"
#   "params":
#   - "name": "inp"
#     "type": "struct inchi_InputEx *"
#   - "name": "out"
#     "type": "struct tagINCHI_Output *"
#   "return_type": "int"
#   "signature": "int GetINCHIEx(inchi_InputEx *, inchi_Output *)"
# - "name": "GetINCHI1"
#   "params":
#   - "name": "extended_input"
#     "type": "struct inchi_InputEx *"
#   - "name": "out"
#     "type": "struct tagINCHI_Output *"
#   - "name": "enforce_std_format"
#     "type": "int"
#   "return_type": "int"
#   "signature": "int GetINCHI1(inchi_InputEx *, inchi_Output *, int)"
- "name": "GetINCHIfromINCHI"
  "params":
  - "name": "inpInChI"
    "type": "struct tagINCHI_InputINCHI *"
  - "name": "out"
    "type": "struct tagINCHI_Output *"
  "return_type": "int"
  "signature": "int GetINCHIfromINCHI(inchi_InputINCHI *, inchi_Output *)"
# - "name": "GetINCHIKeyFromINCHI"
#   "params":
#   - "name": "szINCHISource"
#     "type": "const char*"
#   - "name": "xtra1"
#     "type": "const int" 
#   - "name": "xtra2"
#     "type": "const int"
#   - "name": "szINCHIKey"
#     "type": "char*"
#   - "name": "szXtra1"
#     "type": "char*"
#   - "name": "szXtra2"
#     "type": "char*"
#   "return_type": "EXPIMP_TEMPLATE INCHI_API int INCHI_DECL"
#   "signature": "EXPIMP_TEMPLATE INCHI_API int INCHI_DECL GetINCHIKeyFromINCHI(const char*, const int, const int, char*, char*, char*)"
"language": "c"
"project": "inchi"
"target_name": "inchi_input_fuzzer"
"target_path": "/src/inchi_input_fuzzer.c"
