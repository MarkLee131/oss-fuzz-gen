<!doctype html>

<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>Experiment results</title>
<style>
* {
    box-sizing: border-box;
}

html {
    line-height: 1.15;
}

body {
    font-family: sans-serif;
    font-size: 16px;
}

table {
    border-collapse: collapse;
    border-spacing: 0;
}

td, th {
    border-right: 1px #dedede solid;
    border-bottom: 1px #dedede solid;
    padding: 5px;
    text-align: left;
}
td:first-child, th:first-child {
    border-left: 1px #dedede solid;
}
th {
    border-top: 1px #dedede solid;
}

tbody tr:nth-child(odd) {
    background-color: #f4f5ff;
}
</style>
<body>
    LLM:

<h1>output-icu-_zn6icu_7513messageformat12applypatternerkns_13unicodestringer11uparseerrorr10uerrorcode / 01</h1>
Bug: False
<br>
Crash reason: NO_SEMANTIC_ERR
<br>
<br>




<h3>Final code</h3>

<pre>
#include &lt;fuzzer/FuzzedDataProvider.h&gt;
#include &lt;unicode/unistr.h&gt;
#include &lt;unicode/parseerr.h&gt;
#include &lt;unicode/utypes.h&gt;
#include &lt;unicode/msgfmt.h&gt;
#include &lt;unicode/strenum.h&gt;
#include &lt;unicode/ustream.h&gt;
#include &lt;unicode/locid.h&gt;

extern &#34;C&#34; int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
    FuzzedDataProvider stream(data, size);

    // Generate a random UnicodeString
    std::string pattern_str = stream.ConsumeRandomLengthString();
    icu::UnicodeString pattern = icu::UnicodeString::fromUTF8(icu::StringPiece(pattern_str));

    // Initialize UParseError and UErrorCode
    UParseError parseError;
    UErrorCode errorCode = U_ZERO_ERROR;

    // Create a MessageFormat object
    icu::Locale locale(&#34;en_US&#34;);
    icu::MessageFormat messageFormat(&#34;&#34;, locale, errorCode);

    // Call the target function
    messageFormat.applyPattern(pattern, parseError, errorCode);

    return 0;
}
</pre>


<h3>Fixer prompt #1</h3>
<pre>

Given the following C++ fuzz harness and its build error message, fix the code to make it build for fuzzing.

If there is undeclared identifier or unknown type name error, fix it by finding and including the related libraries.

Note that some code may need to be wrapped with &lt;code&gt;extern &#34;C&#34;&lt;/code&gt; as their source is C program.

MUST RETURN THE FULL CODE, INCLUDING UNCHANGED PARTS.
EXTREMELY IMPORTANT: AVOID USING &lt;code&gt;goto&lt;/code&gt;. If you have to write code using &lt;code&gt;goto&lt;/code&gt;, you MUST MUST also declare all variables BEFORE the &lt;code&gt;goto&lt;/code&gt;. Never introduce new variables after the &lt;code&gt;goto&lt;/code&gt;.

Below is the code needs to be built:
&lt;code&gt;
&lt;solution&gt;
#include &lt;fuzzer/FuzzedDataProvider.h&gt;
#include &lt;unicode/unistr.h&gt;
#include &lt;unicode/parseerr.h&gt;
#include &lt;unicode/utypes.h&gt;
#include &lt;unicode/msgfmt.h&gt;

void icu_75::MessageFormat::applyPattern(const UnicodeString &amp;, UParseError &amp;, UErrorCode &amp;);

extern &#34;C&#34; int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
    FuzzedDataProvider stream(data, size);

    // Generate a random UnicodeString
    std::string pattern_str = stream.ConsumeRandomLengthString();
    UnicodeString pattern = UnicodeString::fromUTF8(StringPiece(pattern_str));

    // Initialize UParseError and UErrorCode
    UParseError parseError;
    UErrorCode errorCode = U_ZERO_ERROR;

    // Create a MessageFormat object
    icu_75::MessageFormat messageFormat;

    // Call the target function
    messageFormat.applyPattern(pattern, parseError, errorCode);

    return 0;
}
&lt;/code&gt;

The code has the following build issues:
&lt;error&gt;
/src/icu/icu4c/source/test/fuzzer/relative_date_time_formatter_fuzzer.cpp:1:1: error: expected unqualified-id
    1 | &lt;solution&gt;
      | ^
/src/icu/icu4c/source/test/fuzzer/relative_date_time_formatter_fuzzer.cpp:8:6: error: use of undeclared identifier &#39;icu_75&#39;; did you mean &#39;icu_76&#39;?
    8 | void icu_75::MessageFormat::applyPattern(const UnicodeString &amp;, UParseError &amp;, UErrorCode &amp;);
      |      ^~~~~~
      |      icu_76
/src/icu/icu4c/source/i18n/unicode/msgfmt.h:46:1: note: &#39;icu_76&#39; declared here
   46 | U_NAMESPACE_BEGIN
      | ^
/src/icu/icu4c/source/common/unicode/uversion.h:110:40: note: expanded from macro &#39;U_NAMESPACE_BEGIN&#39;
  110 | #   define U_NAMESPACE_BEGIN namespace U_ICU_NAMESPACE {
      |                                        ^
/src/icu/icu4c/source/common/unicode/uversion.h:105:32: note: expanded from macro &#39;U_ICU_NAMESPACE&#39;
  105 | #       define U_ICU_NAMESPACE U_ICU_ENTRY_POINT_RENAME(icu)
      |                                ^
/src/icu/icu4c/source/common/unicode/uvernum.h:123:47: note: expanded from macro &#39;U_ICU_ENTRY_POINT_RENAME&#39;
  123 | #       define U_ICU_ENTRY_POINT_RENAME(x)    U_DEF2_ICU_ENTRY_POINT_RENAME(x,U_ICU_VERSION_SUFFIX)
      |                                               ^
/src/icu/icu4c/source/common/unicode/uvernum.h:122:51: note: expanded from macro &#39;U_DEF2_ICU_ENTRY_POINT_RENAME&#39;
  122 | #       define U_DEF2_ICU_ENTRY_POINT_RENAME(x,y) U_DEF_ICU_ENTRY_POINT_RENAME(x,y)
      |                                                   ^
/src/icu/icu4c/source/common/unicode/uvernum.h:121:50: note: expanded from macro &#39;U_DEF_ICU_ENTRY_POINT_RENAME&#39;
  121 | #       define U_DEF_ICU_ENTRY_POINT_RENAME(x,y) x ## y
      |                                                  ^
&lt;scratch space&gt;:55:1: note: expanded from here
   55 | icu_76
      | ^
/src/icu/icu4c/source/test/fuzzer/relative_date_time_formatter_fuzzer.cpp:8:29: error: out-of-line declaration of a member must be a definition [-Wout-of-line-declaration]
    8 | void icu_75::MessageFormat::applyPattern(const UnicodeString &amp;, UParseError &amp;, UErrorCode &amp;);
      |      ~~~~~~~~~~~~~~~~~~~~~~~^
/src/icu/icu4c/source/test/fuzzer/relative_date_time_formatter_fuzzer.cpp:15:5: error: unknown type name &#39;UnicodeString&#39;; did you mean &#39;icu_76::UnicodeString&#39;?
   15 |     UnicodeString pattern = UnicodeString::fromUTF8(StringPiece(pattern_str));
      |     ^~~~~~~~~~~~~
      |     icu_76::UnicodeString
/src/icu/icu4c/source/common/unicode/locid.h:57:7: note: &#39;icu_76::UnicodeString&#39; declared here
   57 | class UnicodeString;
      |       ^
/src/icu/icu4c/source/test/fuzzer/relative_date_time_formatter_fuzzer.cpp:15:29: error: use of undeclared identifier &#39;UnicodeString&#39;; did you mean &#39;icu_76::UnicodeString&#39;?
   15 |     UnicodeString pattern = UnicodeString::fromUTF8(StringPiece(pattern_str));
      |                             ^~~~~~~~~~~~~
      |                             icu_76::UnicodeString
/src/icu/icu4c/source/common/unicode/locid.h:57:7: note: &#39;icu_76::UnicodeString&#39; declared here
   57 | class UnicodeString;
      |       ^
/src/icu/icu4c/source/test/fuzzer/relative_date_time_formatter_fuzzer.cpp:15:53: error: use of undeclared identifier &#39;StringPiece&#39;; did you mean &#39;icu_76::StringPiece&#39;?
   15 |     UnicodeString pattern = UnicodeString::fromUTF8(StringPiece(pattern_str));
      |                                                     ^
/src/icu/icu4c/source/common/unicode/stringpiece.h:60:20: note: &#39;icu_76::StringPiece&#39; declared here
   60 | class U_COMMON_API StringPiece : public UMemory {
      |                    ^
/src/icu/icu4c/source/test/fuzzer/relative_date_time_formatter_fuzzer.cpp:22:5: error: use of undeclared identifier &#39;icu_75&#39;; did you mean &#39;icu_76&#39;?
   22 |     icu_75::MessageFormat messageFormat;
      |     ^~~~~~
      |     icu_76
/src/icu/icu4c/source/i18n/unicode/msgfmt.h:46:1: note: &#39;icu_76&#39; declared here
   46 | U_NAMESPACE_BEGIN
      | ^
/src/icu/icu4c/source/common/unicode/uversion.h:110:40: note: expanded from macro &#39;U_NAMESPACE_BEGIN&#39;
  110 | #   define U_NAMESPACE_BEGIN namespace U_ICU_NAMESPACE {
      |                                        ^
/src/icu/icu4c/source/common/unicode/uversion.h:105:32: note: expanded from macro &#39;U_ICU_NAMESPACE&#39;
  105 | #       define U_ICU_NAMESPACE U_ICU_ENTRY_POINT_RENAME(icu)
      |                                ^
/src/icu/icu4c/source/common/unicode/uvernum.h:123:47: note: expanded from macro &#39;U_ICU_ENTRY_POINT_RENAME&#39;
  123 | #       define U_ICU_ENTRY_POINT_RENAME(x)    U_DEF2_ICU_ENTRY_POINT_RENAME(x,U_ICU_VERSION_SUFFIX)
      |                                               ^
/src/icu/icu4c/source/common/unicode/uvernum.h:122:51: note: expanded from macro &#39;U_DEF2_ICU_ENTRY_POINT_RENAME&#39;
  122 | #       define U_DEF2_ICU_ENTRY_POINT_RENAME(x,y) U_DEF_ICU_ENTRY_POINT_RENAME(x,y)
      |                                                   ^
/src/icu/icu4c/source/common/unicode/uvernum.h:121:50: note: expanded from macro &#39;U_DEF_ICU_ENTRY_POINT_RENAME&#39;
  121 | #       define U_DEF_ICU_ENTRY_POINT_RENAME(x,y) x ## y
      |                                                  ^
&lt;scratch space&gt;:55:1: note: expanded from here
   55 | icu_76
      | ^
&lt;/error&gt;

Fix code:
1. Consider possible solutions for the issues listed above.
2. Choose a solution that can maximize fuzzing result, which is utilizing the function under test and feeding it not null input.
3. Apply the solutions to the original code.
It&#39;s important to show the complete code, not only the fixed line.
&lt;solution&gt;
</pre>



<h3>Code #1</h3>

<pre>
Here is the corrected and complete C++ fuzz harness code:

```cpp
#include &lt;fuzzer/FuzzedDataProvider.h&gt;
#include &lt;unicode/unistr.h&gt;
#include &lt;unicode/parseerr.h&gt;
#include &lt;unicode/utypes.h&gt;
#include &lt;unicode/msgfmt.h&gt;

extern &#34;C&#34; {
    void icu_76::MessageFormat::applyPattern(const icu_76::UnicodeString &amp;, icu_76::UParseError &amp;, icu_76::UErrorCode &amp;);
}

extern &#34;C&#34; int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
    FuzzedDataProvider stream(data, size);

    // Generate a random UnicodeString
    std::string pattern_str = stream.ConsumeRandomLengthString();
    icu_76::UnicodeString pattern = icu_76::UnicodeString::fromUTF8(icu_76::StringPiece(pattern_str));

    // Initialize UParseError and UErrorCode
    icu_76::UParseError parseError;
    icu_76::UErrorCode errorCode = icu_76::U_ZERO_ERROR;

    // Create a MessageFormat object
    icu_76::MessageFormat messageFormat;

    // Call the target function
    messageFormat.applyPattern(pattern, parseError, errorCode);

    return 0;
}
```

### Explanation of Changes:
1. **Namespace Correction**: Changed `icu_75` to `icu_76` in the function declaration and object creation, as indicated by the error messages.
2. **Fully Qualified Names**: Added the `icu_76::` prefix to `UnicodeString`, `StringPiece`, `UParseError`, and `UErrorCode` to ensure the correct types are used.
3. **Extern &#34;C&#34;**: Wrapped the `applyPattern` declaration with `extern &#34;C&#34;` to ensure correct linkage since it might be a C function.
4. **String Consumption**: Used `ConsumeRandomLengthString()` to generate a random string from the fuzzing data.

This should resolve the compilation errors and allow the code to be built for fuzzing.
</pre>


<h3>Fixer prompt #2</h3>
<pre>

Given the following C++ fuzz harness and its build error message, fix the code to make it build for fuzzing.

If there is undeclared identifier or unknown type name error, fix it by finding and including the related libraries.

Note that some code may need to be wrapped with &lt;code&gt;extern &#34;C&#34;&lt;/code&gt; as their source is C program.

MUST RETURN THE FULL CODE, INCLUDING UNCHANGED PARTS.
EXTREMELY IMPORTANT: AVOID USING &lt;code&gt;goto&lt;/code&gt;. If you have to write code using &lt;code&gt;goto&lt;/code&gt;, you MUST MUST also declare all variables BEFORE the &lt;code&gt;goto&lt;/code&gt;. Never introduce new variables after the &lt;code&gt;goto&lt;/code&gt;.

Below is the code needs to be built:
&lt;code&gt;
#include &lt;fuzzer/FuzzedDataProvider.h&gt;
#include &lt;unicode/unistr.h&gt;
#include &lt;unicode/parseerr.h&gt;
#include &lt;unicode/utypes.h&gt;
#include &lt;unicode/msgfmt.h&gt;

extern &#34;C&#34; {
    void icu_76::MessageFormat::applyPattern(const icu_76::UnicodeString &amp;, icu_76::UParseError &amp;, icu_76::UErrorCode &amp;);
}

extern &#34;C&#34; int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
    FuzzedDataProvider stream(data, size);

    // Generate a random UnicodeString
    std::string pattern_str = stream.ConsumeRandomLengthString();
    icu_76::UnicodeString pattern = icu_76::UnicodeString::fromUTF8(icu_76::StringPiece(pattern_str));

    // Initialize UParseError and UErrorCode
    icu_76::UParseError parseError;
    icu_76::UErrorCode errorCode = icu_76::U_ZERO_ERROR;

    // Create a MessageFormat object
    icu_76::MessageFormat messageFormat;

    // Call the target function
    messageFormat.applyPattern(pattern, parseError, errorCode);

    return 0;
}
&lt;/code&gt;

The code has the following build issues:
&lt;error&gt;
/src/icu/icu4c/source/test/fuzzer/relative_date_time_formatter_fuzzer.cpp:8:77: error: no type named &#39;UParseError&#39; in namespace &#39;icu_76&#39;; did you mean simply &#39;UParseError&#39;?
    8 |     void icu_76::MessageFormat::applyPattern(const icu_76::UnicodeString &amp;, icu_76::UParseError &amp;, icu_76::UErrorCode &amp;);
      |                                                                             ^~~~~~~~~~~~~~~~~~~
      |                                                                             UParseError
/src/icu/icu4c/source/common/unicode/parseerr.h:92:3: note: &#39;UParseError&#39; declared here
   92 | } UParseError;
      |   ^
/src/icu/icu4c/source/test/fuzzer/relative_date_time_formatter_fuzzer.cpp:8:100: error: no type named &#39;UErrorCode&#39; in namespace &#39;icu_76&#39;; did you mean simply &#39;UErrorCode&#39;?
    8 |     void icu_76::MessageFormat::applyPattern(const icu_76::UnicodeString &amp;, icu_76::UParseError &amp;, icu_76::UErrorCode &amp;);
      |                                                                                                    ^~~~~~~~~~~~~~~~~~
      |                                                                                                    UErrorCode
/src/icu/icu4c/source/common/unicode/utypes.h:705:3: note: &#39;UErrorCode&#39; declared here
  705 | } UErrorCode;
      |   ^
/src/icu/icu4c/source/test/fuzzer/relative_date_time_formatter_fuzzer.cpp:19:5: error: no type named &#39;UParseError&#39; in namespace &#39;icu_76&#39;; did you mean simply &#39;UParseError&#39;?
   19 |     icu_76::UParseError parseError;
      |     ^~~~~~~~~~~~~~~~~~~
      |     UParseError
/src/icu/icu4c/source/common/unicode/parseerr.h:92:3: note: &#39;UParseError&#39; declared here
   92 | } UParseError;
      |   ^
/src/icu/icu4c/source/test/fuzzer/relative_date_time_formatter_fuzzer.cpp:20:5: error: no type named &#39;UErrorCode&#39; in namespace &#39;icu_76&#39;; did you mean simply &#39;UErrorCode&#39;?
   20 |     icu_76::UErrorCode errorCode = icu_76::U_ZERO_ERROR;
      |     ^~~~~~~~~~~~~~~~~~
      |     UErrorCode
/src/icu/icu4c/source/common/unicode/utypes.h:705:3: note: &#39;UErrorCode&#39; declared here
  705 | } UErrorCode;
      |   ^
/src/icu/icu4c/source/test/fuzzer/relative_date_time_formatter_fuzzer.cpp:20:36: error: no member named &#39;U_ZERO_ERROR&#39; in namespace &#39;icu_76&#39;; did you mean simply &#39;U_ZERO_ERROR&#39;?
   20 |     icu_76::UErrorCode errorCode = icu_76::U_ZERO_ERROR;
      |                                    ^~~~~~~~~~~~~~~~~~~~
      |                                    U_ZERO_ERROR
/src/icu/icu4c/source/common/unicode/utypes.h:450:5: note: &#39;U_ZERO_ERROR&#39; declared here
  450 |     U_ZERO_ERROR              =  0,     /**&lt; No error, no warning. */
      |     ^
/src/icu/icu4c/source/test/fuzzer/relative_date_time_formatter_fuzzer.cpp:23:27: error: call to deleted constructor of &#39;icu_76::MessageFormat&#39;
   23 |     icu_76::MessageFormat messageFormat;
      |                           ^
/src/icu/icu4c/source/i18n/unicode/msgfmt.h:889:5: note: &#39;MessageFormat&#39; has been explicitly marked deleted here
  889 |     MessageFormat() = delete; // default constructor not implemented
      |     ^
&lt;/error&gt;

Fix code:
1. Consider possible solutions for the issues listed above.
2. Choose a solution that can maximize fuzzing result, which is utilizing the function under test and feeding it not null input.
3. Apply the solutions to the original code.
It&#39;s important to show the complete code, not only the fixed line.
&lt;solution&gt;
</pre>



<h3>Code #2</h3>

<pre>
Here is the fixed code with the necessary changes to address the build issues:

```cpp
#include &lt;fuzzer/FuzzedDataProvider.h&gt;
#include &lt;unicode/unistr.h&gt;
#include &lt;unicode/parseerr.h&gt;
#include &lt;unicode/utypes.h&gt;
#include &lt;unicode/msgfmt.h&gt;
#include &lt;unicode/strenum.h&gt;
#include &lt;unicode/ustream.h&gt;
#include &lt;unicode/locid.h&gt;

extern &#34;C&#34; int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
    FuzzedDataProvider stream(data, size);

    // Generate a random UnicodeString
    std::string pattern_str = stream.ConsumeRandomLengthString();
    icu::UnicodeString pattern = icu::UnicodeString::fromUTF8(icu::StringPiece(pattern_str));

    // Initialize UParseError and UErrorCode
    UParseError parseError;
    UErrorCode errorCode = U_ZERO_ERROR;

    // Create a MessageFormat object
    icu::Locale locale(&#34;en_US&#34;);
    icu::MessageFormat messageFormat(&#34;&#34;, locale, errorCode);

    // Call the target function
    messageFormat.applyPattern(pattern, parseError, errorCode);

    return 0;
}
```

### Explanation of Fixes:
1. **Namespace Correction**: Removed the incorrect `icu_76::` namespace and used the correct `icu::` namespace for ICU types.
2. **Include Additional Headers**: Added necessary headers such as `unicode/strenum.h`, `unicode/ustream.h`, and `unicode/locid.h` to resolve any missing dependencies.
3. **Correct Object Creation**: The `MessageFormat` constructor was explicitly marked as deleted for the default constructor. Instead, we used a valid constructor that takes a pattern string and a locale.
4. **Error Handling**: Ensured that `UParseError` and `UErrorCode` are correctly initialized and used without the incorrect namespace.

By making these changes, the code should compile successfully and be ready for fuzzing.
</pre>


<h2>Logs</h2>
<pre>
Fixing /home/kaixuan/FDG_LLM/oss-fuzz-gen/results/output-icu-_zn6icu_7513messageformat12applypatternerkns_13unicodestringer11uparseerrorr10uerrorcode/fixed_targets/01.cpp with gpt-4o, attempt 1.
Fixing /home/kaixuan/FDG_LLM/oss-fuzz-gen/results/output-icu-_zn6icu_7513messageformat12applypatternerkns_13unicodestringer11uparseerrorr10uerrorcode/fixed_targets/01.cpp with gpt-4o, attempt 2.
Successfully built /home/kaixuan/FDG_LLM/oss-fuzz-gen/results/output-icu-_zn6icu_7513messageformat12applypatternerkns_13unicodestringer11uparseerrorr10uerrorcode/fixed_targets/01.cpp with gpt-4o in 2 iterations of fixing.
Result for icu-zn6icu_7513messageformat12applypatternerkns_13unicodestringer11uparseerrorr10uerrorcode-01: crashes=False, coverage=0.008315077162747675 (854/102705), coverage diff=0.0028801486528336946 (465/161450)

</pre>

<h2>Run logs</h2>
<pre>
INFO:__main__:Running: docker run --rm --privileged --shm-size=2g --platform linux/amd64 -e FUZZING_ENGINE=libfuzzer -e SANITIZER=address -e RUN_FUZZER_MODE=interactive -e HELPER=True -v /home/kaixuan/FDG_LLM/oss-fuzz-gen/results/output-icu-_zn6icu_7513messageformat12applypatternerkns_13unicodestringer11uparseerrorr10uerrorcode/corpora/01.cpp:/tmp/relative_date_time_formatter_fuzzer_corpus -v /tmp/tmptrp7ybx_/build/out/icu-zn6icu_7513messageformat12applypatternerkns_13unicodestringer11uparseerrorr10uerrorcode-01:/out -t gcr.io/oss-fuzz-base/base-runner run_fuzzer relative_date_time_formatter_fuzzer -print_final_stats=1 -max_total_time=30 -len_control=0 -timeout=30.
vm.mmap_rnd_bits = 28
rm: cannot remove &#39;/tmp/relative_date_time_formatter_fuzzer_corpus&#39;: Device or resource busy
/out/relative_date_time_formatter_fuzzer -rss_limit_mb=2560 -timeout=25 -print_final_stats=1 -max_total_time=30 -len_control=0 -timeout=30 /tmp/relative_date_time_formatter_fuzzer_corpus &lt; /dev/null
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 1109634084
INFO: Loaded 1 modules   (102705 inline 8-bit counters): 102705 [0x564ef6b5c750, 0x564ef6b75881),
INFO: Loaded 1 PC tables (102705 PCs): 102705 [0x564ef6b75888,0x564ef6d06b98),
INFO:        0 files found in /tmp/relative_date_time_formatter_fuzzer_corpus
INFO: -max_len is not provided; libFuzzer will not generate inputs larger than 4096 bytes
INFO: A corpus is not provided, starting from an empty corpus
#2	INITED cov: 288 ft: 289 corp: 1/1b exec/s: 0 rss: 40Mb
#3	NEW    cov: 320 ft: 342 corp: 2/102b lim: 4096 exec/s: 0 rss: 40Mb L: 101/101 MS: 1 InsertRepeatedBytes-
#4	NEW    cov: 320 ft: 355 corp: 3/104b lim: 4096 exec/s: 0 rss: 40Mb L: 2/101 MS: 1 CopyPart-
	NEW_FUNC[1/1]: 0x564ef4b039e0 in utf8_nextCharSafeBody_76 /src/icu/icu4c/source/common/utf_impl.cpp:131
#6	NEW    cov: 329 ft: 364 corp: 4/205b lim: 4096 exec/s: 0 rss: 41Mb L: 101/101 MS: 2 ChangeByte-ChangeByte-
#7	NEW    cov: 329 ft: 374 corp: 5/209b lim: 4096 exec/s: 0 rss: 41Mb L: 4/101 MS: 1 CMP- DE: &#34;\001\000&#34;-
#9	NEW    cov: 335 ft: 380 corp: 6/211b lim: 4096 exec/s: 0 rss: 41Mb L: 2/101 MS: 2 ChangeBit-InsertByte-
#10	NEW    cov: 335 ft: 396 corp: 7/225b lim: 4096 exec/s: 0 rss: 41Mb L: 14/101 MS: 1 InsertRepeatedBytes-
#11	NEW    cov: 335 ft: 398 corp: 8/305b lim: 4096 exec/s: 0 rss: 41Mb L: 80/101 MS: 1 InsertRepeatedBytes-
#14	NEW    cov: 335 ft: 400 corp: 9/341b lim: 4096 exec/s: 0 rss: 41Mb L: 36/101 MS: 3 ChangeBit-EraseBytes-InsertRepeatedBytes-
#21	NEW    cov: 338 ft: 403 corp: 10/342b lim: 4096 exec/s: 0 rss: 41Mb L: 1/101 MS: 2 ChangeByte-ChangeByte-
#22	NEW    cov: 338 ft: 404 corp: 11/346b lim: 4096 exec/s: 0 rss: 41Mb L: 4/101 MS: 1 CrossOver-
#23	NEW    cov: 338 ft: 409 corp: 12/351b lim: 4096 exec/s: 0 rss: 41Mb L: 5/101 MS: 1 CrossOver-
#30	NEW    cov: 338 ft: 420 corp: 13/354b lim: 4096 exec/s: 0 rss: 41Mb L: 3/101 MS: 2 ChangeByte-InsertByte-
	NEW_FUNC[1/1]: 0x564ef440ea00 in std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::__shrink_or_extend[abi:v180000](unsigned long) /usr/local/bin/../include/c++/v1/string:3269
#31	NEW    cov: 351 ft: 433 corp: 14/501b lim: 4096 exec/s: 0 rss: 41Mb L: 147/147 MS: 1 InsertRepeatedBytes-
#40	NEW    cov: 351 ft: 455 corp: 15/707b lim: 4096 exec/s: 0 rss: 41Mb L: 206/206 MS: 4 CrossOver-CrossOver-PersAutoDict-CrossOver- DE: &#34;\001\000&#34;-
#46	NEW    cov: 351 ft: 458 corp: 16/711b lim: 4096 exec/s: 0 rss: 41Mb L: 4/206 MS: 1 CopyPart-
#58	NEW    cov: 351 ft: 469 corp: 17/727b lim: 4096 exec/s: 0 rss: 41Mb L: 16/206 MS: 2 ChangeBit-PersAutoDict- DE: &#34;\001\000&#34;-
#61	NEW    cov: 351 ft: 475 corp: 18/736b lim: 4096 exec/s: 0 rss: 41Mb L: 9/206 MS: 3 ChangeBinInt-PersAutoDict-EraseBytes- DE: &#34;\001\000&#34;-
#65	REDUCE cov: 351 ft: 475 corp: 18/712b lim: 4096 exec/s: 0 rss: 41Mb L: 56/206 MS: 4 InsertByte-InsertByte-ChangeByte-EraseBytes-
#72	REDUCE cov: 351 ft: 475 corp: 18/676b lim: 4096 exec/s: 0 rss: 41Mb L: 65/206 MS: 2 EraseBytes-EraseBytes-
#73	NEW    cov: 356 ft: 480 corp: 19/678b lim: 4096 exec/s: 0 rss: 41Mb L: 2/206 MS: 1 ChangeByte-
#80	NEW    cov: 360 ft: 484 corp: 20/694b lim: 4096 exec/s: 0 rss: 41Mb L: 16/206 MS: 2 ChangeBit-CrossOver-
#81	NEW    cov: 364 ft: 499 corp: 21/754b lim: 4096 exec/s: 0 rss: 41Mb L: 60/206 MS: 1 InsertRepeatedBytes-
#82	NEW    cov: 364 ft: 502 corp: 22/771b lim: 4096 exec/s: 0 rss: 42Mb L: 17/206 MS: 1 InsertByte-
#84	NEW    cov: 364 ft: 506 corp: 23/781b lim: 4096 exec/s: 0 rss: 42Mb L: 10/206 MS: 2 InsertByte-CrossOver-
#97	REDUCE cov: 364 ft: 510 corp: 24/842b lim: 4096 exec/s: 0 rss: 42Mb L: 61/206 MS: 3 ShuffleBytes-EraseBytes-CrossOver-
#98	NEW    cov: 367 ft: 513 corp: 25/852b lim: 4096 exec/s: 0 rss: 42Mb L: 10/206 MS: 1 InsertByte-
#100	REDUCE cov: 367 ft: 513 corp: 25/851b lim: 4096 exec/s: 0 rss: 42Mb L: 15/206 MS: 2 PersAutoDict-EraseBytes- DE: &#34;\001\000&#34;-
#101	NEW    cov: 369 ft: 521 corp: 26/949b lim: 4096 exec/s: 0 rss: 42Mb L: 98/206 MS: 1 InsertRepeatedBytes-
#105	NEW    cov: 370 ft: 522 corp: 27/951b lim: 4096 exec/s: 0 rss: 42Mb L: 2/206 MS: 4 ShuffleBytes-InsertByte-ShuffleBytes-ChangeByte-
#108	NEW    cov: 370 ft: 528 corp: 28/1218b lim: 4096 exec/s: 0 rss: 42Mb L: 267/267 MS: 3 ShuffleBytes-ChangeBinInt-CrossOver-
#112	REDUCE cov: 371 ft: 529 corp: 29/1277b lim: 4096 exec/s: 0 rss: 42Mb L: 59/267 MS: 4 ChangeByte-EraseBytes-CMP-ChangeByte- DE: &#34;\001\000\000\000\000\000\0003&#34;-
#113	NEW    cov: 371 ft: 531 corp: 30/1289b lim: 4096 exec/s: 0 rss: 42Mb L: 12/267 MS: 1 PersAutoDict- DE: &#34;\001\000&#34;-
#117	NEW    cov: 371 ft: 533 corp: 31/1524b lim: 4096 exec/s: 0 rss: 42Mb L: 235/267 MS: 4 ChangeBinInt-ShuffleBytes-CrossOver-InsertRepeatedBytes-
#120	NEW    cov: 373 ft: 542 corp: 32/1586b lim: 4096 exec/s: 0 rss: 42Mb L: 62/267 MS: 3 ChangeBit-ChangeBinInt-InsertByte-
#122	NEW    cov: 373 ft: 545 corp: 33/1622b lim: 4096 exec/s: 0 rss: 42Mb L: 36/267 MS: 2 ShuffleBytes-ChangeBinInt-
#123	NEW    cov: 373 ft: 549 corp: 34/1635b lim: 4096 exec/s: 0 rss: 42Mb L: 13/267 MS: 1 InsertByte-
#127	NEW    cov: 373 ft: 553 corp: 35/1846b lim: 4096 exec/s: 0 rss: 42Mb L: 211/267 MS: 4 CrossOver-EraseBytes-ChangeBit-ChangeBit-
#134	NEW    cov: 373 ft: 554 corp: 36/1874b lim: 4096 exec/s: 0 rss: 42Mb L: 28/267 MS: 2 CrossOver-CrossOver-
#142	NEW    cov: 373 ft: 557 corp: 37/2153b lim: 4096 exec/s: 0 rss: 42Mb L: 279/279 MS: 3 InsertByte-EraseBytes-InsertRepeatedBytes-
#149	NEW    cov: 373 ft: 559 corp: 38/2466b lim: 4096 exec/s: 0 rss: 42Mb L: 313/313 MS: 2 CopyPart-InsertRepeatedBytes-
#150	NEW    cov: 373 ft: 563 corp: 39/2579b lim: 4096 exec/s: 0 rss: 42Mb L: 113/313 MS: 1 CrossOver-
#174	NEW    cov: 373 ft: 565 corp: 40/2686b lim: 4096 exec/s: 0 rss: 42Mb L: 107/313 MS: 4 CMP-InsertByte-CopyPart-InsertRepeatedBytes- DE: &#34;\012\000\000\000\000\000\000\000&#34;-
#180	NEW    cov: 373 ft: 566 corp: 41/2746b lim: 4096 exec/s: 0 rss: 42Mb L: 60/313 MS: 1 CrossOver-
#186	NEW    cov: 373 ft: 567 corp: 42/2764b lim: 4096 exec/s: 0 rss: 42Mb L: 18/313 MS: 1 CrossOver-
#187	NEW    cov: 373 ft: 572 corp: 43/3141b lim: 4096 exec/s: 0 rss: 42Mb L: 377/377 MS: 1 CrossOver-
#191	NEW    cov: 375 ft: 579 corp: 44/3154b lim: 4096 exec/s: 0 rss: 42Mb L: 13/377 MS: 4 CopyPart-PersAutoDict-CopyPart-ChangeByte- DE: &#34;\001\000\000\000\000\000\0003&#34;-
#202	NEW    cov: 375 ft: 589 corp: 45/3214b lim: 4096 exec/s: 0 rss: 42Mb L: 60/377 MS: 1 CrossOver-
#203	NEW    cov: 376 ft: 590 corp: 46/3245b lim: 4096 exec/s: 0 rss: 42Mb L: 31/377 MS: 1 InsertRepeatedBytes-
#204	NEW    cov: 376 ft: 595 corp: 47/3315b lim: 4096 exec/s: 0 rss: 42Mb L: 70/377 MS: 1 CopyPart-
#207	NEW    cov: 377 ft: 597 corp: 48/3342b lim: 4096 exec/s: 0 rss: 42Mb L: 27/377 MS: 3 ShuffleBytes-ChangeBinInt-InsertRepeatedBytes-
#210	NEW    cov: 377 ft: 603 corp: 49/3673b lim: 4096 exec/s: 0 rss: 42Mb L: 331/377 MS: 3 PersAutoDict-InsertRepeatedBytes-CopyPart- DE: &#34;\001\000\000\000\000\000\0003&#34;-
#212	NEW    cov: 378 ft: 604 corp: 50/3674b lim: 4096 exec/s: 0 rss: 42Mb L: 1/377 MS: 2 ChangeBit-ChangeByte-
#214	NEW    cov: 378 ft: 605 corp: 51/3782b lim: 4096 exec/s: 0 rss: 42Mb L: 108/377 MS: 2 CopyPart-InsertByte-
#217	NEW    cov: 378 ft: 606 corp: 52/3827b lim: 4096 exec/
...truncated...
 4096 exec/s: 10054 rss: 69Mb L: 1209/4069 MS: 5 ChangeBinInt-ChangeByte-CopyPart-CopyPart-EraseBytes-
#301791	REDUCE cov: 854 ft: 2761 corp: 578/230Kb lim: 4096 exec/s: 10059 rss: 69Mb L: 65/4069 MS: 2 ChangeBit-EraseBytes-
#301937	REDUCE cov: 854 ft: 2761 corp: 578/230Kb lim: 4096 exec/s: 10064 rss: 69Mb L: 69/4069 MS: 1 EraseBytes-
#302240	REDUCE cov: 854 ft: 2761 corp: 578/230Kb lim: 4096 exec/s: 10074 rss: 69Mb L: 55/4069 MS: 3 ShuffleBytes-ChangeBinInt-EraseBytes-
#302247	REDUCE cov: 854 ft: 2761 corp: 578/230Kb lim: 4096 exec/s: 10074 rss: 69Mb L: 1431/4069 MS: 2 ChangeByte-EraseBytes-
#302269	REDUCE cov: 854 ft: 2761 corp: 578/230Kb lim: 4096 exec/s: 10075 rss: 69Mb L: 25/4069 MS: 2 ShuffleBytes-EraseBytes-
#302340	REDUCE cov: 854 ft: 2761 corp: 578/229Kb lim: 4096 exec/s: 10078 rss: 69Mb L: 32/4069 MS: 1 EraseBytes-
#302345	DONE   cov: 854 ft: 2761 corp: 578/229Kb lim: 4096 exec/s: 9753 rss: 69Mb
###### Recommended dictionary. ######
&#34;\001\000&#34; # Uses: 312
&#34;\001\000\000\000\000\000\0003&#34; # Uses: 316
&#34;\012\000\000\000\000\000\000\000&#34; # Uses: 286
&#34;\204\000\000\000&#34; # Uses: 266
&#34;B\000&#34; # Uses: 287
&#34;\001\000\000\000\000\000\000\001&#34; # Uses: 287
&#34;\002\000\000\000\000\000\000\000&#34; # Uses: 314
&#34;\337\002\000\000\000\000\000\000&#34; # Uses: 306
&#34;\001\000\000\000\000\000\000\037&#34; # Uses: 292
&#34;\000\000\000\000\000\000\000\007&#34; # Uses: 269
&#34;\037\000&#34; # Uses: 291
&#34;\377\377\377\010&#34; # Uses: 264
&#34;\004\000\000\000\000\000\000\000&#34; # Uses: 275
&#34;\213\003\000\000&#34; # Uses: 261
&#34;R\000&#34; # Uses: 260
&#34;\001\000\001a&#34; # Uses: 263
&#34;\377\377\377\377\377\377\377\340&#34; # Uses: 253
&#34;\377\377\000\334&#34; # Uses: 289
&#34;\377\377\377\377\377\377\377\011&#34; # Uses: 254
&#34;\001\000\000\261&#34; # Uses: 261
&#34;o\002\000\000&#34; # Uses: 240
&#34;\004\001\000\000&#34; # Uses: 255
&#34;\022\000&#34; # Uses: 278
&#34;\004\000&#34; # Uses: 251
&#34;C\000&#34; # Uses: 250
&#34;\000p&#34; # Uses: 236
&#34;\000\000\000\000\000\000\000\024&#34; # Uses: 233
&#34;\377\377\377\377\377\377\377\031&#34; # Uses: 247
&#34;\002\000\000\000&#34; # Uses: 256
&#34;\377\377\377\000&#34; # Uses: 226
&#34;\007\012\000\000&#34; # Uses: 244
&#34;\377\377\377\377\377\377\377\377&#34; # Uses: 223
&#34;\216\000\000\000&#34; # Uses: 265
&#34;\000\000\000\000\000\000\012\021&#34; # Uses: 228
&#34;.\000\000\000&#34; # Uses: 204
&#34;\000\000\000\000\000\000\000\016&#34; # Uses: 216
&#34;%\001\000\000&#34; # Uses: 219
&#34;\001\000\000\000\000\000\000\000&#34; # Uses: 223
&#34;\210\000&#34; # Uses: 239
&#34;\000\000\000\000\000\000\000\013&#34; # Uses: 192
&#34;\321\001\000\000\000\000\000\000&#34; # Uses: 222
&#34;\377\377\377\002&#34; # Uses: 219
&#34;+\000&#34; # Uses: 222
&#34;\003\000\000\000\000\000\000\000&#34; # Uses: 215
&#34;\007\000\000\000&#34; # Uses: 205
&#34;\000\000\000\000\000\000\000\003&#34; # Uses: 208
&#34;\000\000\0002&#34; # Uses: 201
&#34;\001\000\000\000\000\000\000\017&#34; # Uses: 178
&#34;\221\000\000\000\000\000\000\000&#34; # Uses: 186
&#34;\377\377\377h&#34; # Uses: 218
&#34;!\000\000\000&#34; # Uses: 215
&#34;\001\000\000\000\000\000\000_&#34; # Uses: 204
&#34;J\000\000\000&#34; # Uses: 199
&#34;\377=&#34; # Uses: 194
&#34;\271\000\000\000&#34; # Uses: 191
&#34;\020\002\000\000\000\000\000\000&#34; # Uses: 194
&#34;\001\000\000\000\000\000\000{&#34; # Uses: 185
&#34;\377\377\3776&#34; # Uses: 186
&#34;\000\000\001|&#34; # Uses: 191
&#34;\263\000\000\000&#34; # Uses: 187
&#34;\377\377\377\377\377\377\377\001&#34; # Uses: 178
&#34;\001\000\000\000\000\000\000/&#34; # Uses: 192
&#34;\002\032&#34; # Uses: 173
&#34;\377\202&#34; # Uses: 196
&#34;\001\000\000\000\000\000\000Q&#34; # Uses: 180
&#34;\006\001\001\000&#34; # Uses: 170
&#34;%\000\000\000&#34; # Uses: 175
&#34;u\000&#34; # Uses: 169
&#34;\201\010\000\000\000\000\000\000&#34; # Uses: 169
&#34;\015\000\000\000\000\000\000\000&#34; # Uses: 156
&#34;\000\000\000\000\000\000\000\000&#34; # Uses: 155
&#34;\007\000\000\000\000\000\000\000&#34; # Uses: 176
&#34;\377\377\377\377\377\377\377\200&#34; # Uses: 151
&#34;\000\000\000\023&#34; # Uses: 162
&#34;\002\000&#34; # Uses: 172
&#34;b\000\000\000\000\000\000\000&#34; # Uses: 167
&#34;K\004\000\000\000\000\000\000&#34; # Uses: 167
&#34;k\006\000\000&#34; # Uses: 161
&#34;\364\377\377\377&#34; # Uses: 166
&#34;\0017&#34; # Uses: 171
&#34;\000\000\000\000\000\000\000A&#34; # Uses: 177
&#34;2\000\000\000\000\000\000\000&#34; # Uses: 135
&#34;\001\036&#34; # Uses: 149
&#34;\011\000\000\000\000\000\000\000&#34; # Uses: 114
&#34;\004\000\000\000&#34; # Uses: 135
&#34;\277\000&#34; # Uses: 147
&#34;\377\331&#34; # Uses: 149
&#34;\014\000\000\000\000\000\000\000&#34; # Uses: 141
&#34;\005\000\000\000\000\000\000\000&#34; # Uses: 159
&#34;\377\377\377\377\377\377\377\013&#34; # Uses: 143
&#34;\000\000\000\000\000\000\004\000&#34; # Uses: 138
&#34;0\000\000\000&#34; # Uses: 157
&#34;\001\000\000\012&#34; # Uses: 155
&#34;\015\000\000\000&#34; # Uses: 133
&#34;\377\377\377\377\377\377\377\033&#34; # Uses: 150
&#34;\212\001&#34; # Uses: 150
&#34;\000\000\000D&#34; # Uses: 113
&#34;(\000\000\000\000\000\000\000&#34; # Uses: 118
&#34;\003\000\000\000&#34; # Uses: 129
&#34;g\000\000\000&#34; # Uses: 121
&#34;\377\377\377\377\377\377\377\003&#34; # Uses: 135
&#34;9\000\000\000&#34; # Uses: 134
&#34;\001\000\001\020&#34; # Uses: 136
&#34;\000\000\000\000\000\000\000l&#34; # Uses: 137
&#34;\020\000\000\000&#34; # Uses: 133
&#34;\177\003&#34; # Uses: 143
&#34;\001\000\012A&#34; # Uses: 138
&#34;\000\001&#34; # Uses: 122
&#34;\006\000\000\000\000\000\000\000&#34; # Uses: 127
&#34;\014\004\000\000\000\000\000\000&#34; # Uses: 104
&#34;\033\000\000\000&#34; # Uses: 124
&#34;\013\000\000\000\000\000\000\000&#34; # Uses: 127
&#34;\377g&#34; # Uses: 115
&#34;O\000\000\000\000\000\000\000&#34; # Uses: 112
&#34;\001\000\000[&#34; # Uses: 125
&#34;\001\000\000\000\000\000\000\005&#34; # Uses: 113
&#34;\377\377\377\377\377\377\003l&#34; # Uses: 131
&#34;\377\377&#34; # Uses: 108
&#34;\212\000\000\000&#34; # Uses: 122
&#34;\037\000\000\000&#34; # Uses: 125
&#34;)\001\000\000&#34; # Uses: 131
&#34;\377\377\000\236&#34; # Uses: 120
&#34;\221\000&#34; # Uses: 124
&#34;\377\377\377\377\377\377\377H&#34; # Uses: 92
&#34;\377\377\377\377\377\377\001\020&#34; # Uses: 92
&#34;\002\355&#34; # Uses: 115
&#34;\377\377\377\377\377\377\377\023&#34; # Uses: 100
&#34;\001\000\000\030&#34; # Uses: 128
&#34;\001\000\000\000\000\000\000\002&#34; # Uses: 111
&#34;\000\000\000\032&#34; # Uses: 116
&#34;\000\000\000$&#34; # Uses: 95
&#34;\001\000\000&gt;&#34; # Uses: 109
&#34;\327\000\000\000&#34; # Uses: 106
&#34;\263\006\000\000&#34; # Uses: 90
&#34;\377\377\000C&#34; # Uses: 94
&#34;\000\000\000\000\000\000\002,&#34; # Uses: 103
&#34;\001\000\000\230&#34; # Uses: 83
&#34;\000\000\000\000\000\000\000\030&#34; # Uses: 70
&#34;\000\000\000\000\000\000\002*&#34; # Uses: 89
&#34;F\004\000\000&#34; # Uses: 99
&#34;\001\000\000\000\000\000\000\004&#34; # Uses: 73
&#34;+\000\000\000\000\000\000\000&#34; # Uses: 74
&#34;\000\000\000\013&#34; # Uses: 86
&#34;\000\000\000\000&#34; # Uses: 88
&#34;\242\003\000\000\000\000\000\000&#34; # Uses: 81
&#34;\001\000\000\234&#34; # Uses: 87
&#34;\002\003&#34; # Uses: 81
&#34;\365\000\000\000\000\000\000\000&#34; # Uses: 57
&#34;\025\000\000\000\000\000\000\000&#34; # Uses: 63
&#34;\022\000\000\000\000\000\000\000&#34; # Uses: 67
&#34;\000\000\000\037&#34; # Uses: 69
&#34;\000Z&#34; # Uses: 55
&#34;\001\000\000\001&#34; # Uses: 69
&#34;\001\001\001\011&#34; # Uses: 79
&#34;\001\000\000\000\000\000\000\015&#34; # Uses: 71
&#34;\377\377\377\377&#34; # Uses: 60
&#34;X\000&#34; # Uses: 59
&#34;\273\016\000\000&#34; # Uses: 47
&#34;\001\000\000N&#34; # Uses: 58
&#34;\311\000\000\000\000\000\000\000&#34; # Uses: 50
&#34;-\001&#34; # Uses: 42
&#34;\000\000&#34; # Uses: 45
&#34;\001\000\000\000&#34; # Uses: 38
&#34;\003\000&#34; # Uses: 45
&#34;\000\001\000\000\000\000\000\000&#34; # Uses: 52
&#34;\000\000\000\000\000\000\011\245&#34; # Uses: 36
&#34;e\005\000\000\000\000\000\000&#34; # Uses: 32
&#34;\005\000&#34; # Uses: 42
&#34;\377\351&#34; # Uses: 42
&#34;$\000&#34; # Uses: 32
&#34;\001\000\000\000\000\000\000)&#34; # Uses: 37
&#34;\030\000\000\000\000\000\000\000&#34; # Uses: 29
&#34;\001\000\000\000\000\000\000-&#34; # Uses: 27
&#34;\244\000&#34; # Uses: 22
&#34;\000\376&#34; # Uses: 26
&#34;\001\000\000\002&#34; # Uses: 26
&#34;\377\377\377\377\377\377\377\005&#34; # Uses: 24
&#34;\001\000\000\000\000\000\000\013&#34; # Uses: 31
&#34;S\000&#34; # Uses: 31
&#34;-\000\000\000&#34; # Uses: 19
&#34;\236\003&#34; # Uses: 25
&#34;\377\205&#34; # Uses: 19
&#34;\227\003&#34; # Uses: 27
&#34;\011\004\000\000\000\000\000\000&#34; # Uses: 20
&#34;\001\000\000\\&#34; # Uses: 17
&#34;\010\001\000\000&#34; # Uses: 9
&#34;\316\004\000\000&#34; # Uses: 16
&#34;\377\377\377\016&#34; # Uses: 11
&#34;\000\000\000\223&#34; # Uses: 21
&#34;4\000\000\000&#34; # Uses: 9
&#34;\010\000\000\000\000\000\000\000&#34; # Uses: 7
&#34;\001\000\0009&#34; # Uses: 11
&#34;\001\000\000\000\000\000\000\030&#34; # Uses: 13
&#34;\001\001&#34; # Uses: 7
&#34;\000\000\000\000\000\000\000\004&#34; # Uses: 9
&#34;\377\377\377\377\377\377\377\002&#34; # Uses: 4
###### End of recommended dictionary. ######
Done 302345 runs in 31 second(s)
stat::number_of_executed_units: 302345
stat::average_exec_per_sec:     9753
stat::new_units_added:          3468
stat::slowest_unit_time_sec:    0
stat::peak_rss_mb:              69

</pre>

</body>