<!doctype html>

<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>Experiment results</title>
<style>
* {
    box-sizing: border-box;
}

html {
    line-height: 1.15;
}

body {
    font-family: sans-serif;
    font-size: 16px;
}

table {
    border-collapse: collapse;
    border-spacing: 0;
}

td, th {
    border-right: 1px #dedede solid;
    border-bottom: 1px #dedede solid;
    padding: 5px;
    text-align: left;
}
td:first-child, th:first-child {
    border-left: 1px #dedede solid;
}
th {
    border-top: 1px #dedede solid;
}

tbody tr:nth-child(odd) {
    background-color: #f4f5ff;
}
</style>
<body>
    LLM:

<h1>output-eigen-_zn5eigen6matrixidlin1elin1eli0elin1elin1eed2ev / 01</h1>
Bug: False
<br>
Crash reason: NO_SEMANTIC_ERR
<br>
<br>




<h3>Final code</h3>

<pre>
#include &lt;fuzzer/FuzzedDataProvider.h&gt;
#include &lt;Eigen/Dense&gt;

using Eigen::Matrix;

extern &#34;C&#34; int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);

  // Create a Matrix&lt;int, Eigen::Dynamic, Eigen::Dynamic&gt; object
  int rows = stream.ConsumeIntegralInRange&lt;int&gt;(1, 10);
  int cols = stream.ConsumeIntegralInRange&lt;int&gt;(1, 10);
  Matrix&lt;int, Eigen::Dynamic, Eigen::Dynamic&gt; int_matrix(rows, cols);

  // Fill the matrix with some values
  for (int i = 0; i &lt; rows; ++i) {
    for (int j = 0; j &lt; cols; ++j) {
      int_matrix(i, j) = stream.ConsumeIntegral&lt;int&gt;();
    }
  }

  // Create a Matrix&lt;double, Eigen::Dynamic, Eigen::Dynamic&gt; object
  Matrix&lt;double, Eigen::Dynamic, Eigen::Dynamic&gt;* double_matrix =
      new Matrix&lt;double, Eigen::Dynamic, Eigen::Dynamic&gt;(rows, cols);

  // Fill the matrix with some values
  for (int i = 0; i &lt; rows; ++i) {
    for (int j = 0; j &lt; cols; ++j) {
      (*double_matrix)(i, j) = stream.ConsumeFloatingPoint&lt;double&gt;();
    }
  }

  // Perform some operations on the matrices to utilize them
  Matrix&lt;int, Eigen::Dynamic, Eigen::Dynamic&gt; int_matrix_transpose = int_matrix.transpose();
  Matrix&lt;double, Eigen::Dynamic, Eigen::Dynamic&gt; double_matrix_transpose = double_matrix-&gt;transpose();

  // Clean up
  delete double_matrix;

  return 0;
}
</pre>


<h3>Fixer prompt #1</h3>
<pre>

Given the following C++ fuzz harness and its build error message, fix the code to make it build for fuzzing.

If there is undeclared identifier or unknown type name error, fix it by finding and including the related libraries.

Note that some code may need to be wrapped with &lt;code&gt;extern &#34;C&#34;&lt;/code&gt; as their source is C program.

MUST RETURN THE FULL CODE, INCLUDING UNCHANGED PARTS.
EXTREMELY IMPORTANT: AVOID USING &lt;code&gt;goto&lt;/code&gt;. If you have to write code using &lt;code&gt;goto&lt;/code&gt;, you MUST MUST also declare all variables BEFORE the &lt;code&gt;goto&lt;/code&gt;. Never introduce new variables after the &lt;code&gt;goto&lt;/code&gt;.

Below is the code needs to be built:
&lt;code&gt;
&lt;solution&gt;
#include &lt;fuzzer/FuzzedDataProvider.h&gt;
#include &lt;Eigen/Dense&gt;

using Eigen::Matrix;

extern &#34;C&#34; int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);

  // Create a Matrix&lt;int, -1, -1, 0, -1, -1&gt; object
  int rows = stream.ConsumeIntegralInRange&lt;int&gt;(1, 10);
  int cols = stream.ConsumeIntegralInRange&lt;int&gt;(1, 10);
  Matrix&lt;int, Eigen::Dynamic, Eigen::Dynamic&gt; int_matrix(rows, cols);

  // Fill the matrix with some values
  for (int i = 0; i &lt; rows; ++i) {
    for (int j = 0; j &lt; cols; ++j) {
      int_matrix(i, j) = stream.ConsumeIntegral&lt;int&gt;();
    }
  }

  // Create a Matrix&lt;double, -1, -1, 0, -1, -1&gt; object
  Matrix&lt;double, Eigen::Dynamic, Eigen::Dynamic&gt;* double_matrix =
      new Matrix&lt;double, Eigen::Dynamic, Eigen::Dynamic&gt;(rows, cols);

  // Fill the matrix with some values
  for (int i = 0; i &lt; rows; ++i) {
    for (int j = 0; j &lt; cols; ++j) {
      (*double_matrix)(i, j) = stream.ConsumeFloatingPoint&lt;double&gt;();
    }
  }

  // Call the destructor
  double_matrix-&gt;~Matrix(&amp;int_matrix);

  // Clean up
  delete double_matrix;

  return 0;
}

void Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;::~Matrix(Matrix&lt;int, -1, -1, 0, -1, -1&gt; *) {
  // Destructor implementation
}
&lt;/code&gt;

The code has the following build issues:
&lt;error&gt;
/src/solver_fuzzer.cc:1:1: error: expected unqualified-id
    1 | &lt;solution&gt;
      | ^
/src/solver_fuzzer.cc:34:26: error: too many arguments to function call, expected 0, have 1
   34 |   double_matrix-&gt;~Matrix(&amp;int_matrix);
      |   ~~~~~~~~~~~~~~~~~~~~~~ ^~~~~~~~~~~
./Eigen/src/Core/Matrix.h:186:7: note: &#39;~Matrix&#39; declared here
  186 | class Matrix : public PlainObjectBase&lt;Matrix&lt;Scalar_, Rows_, Cols_, Options_, MaxRows_, MaxCols_&gt;&gt; {
      |       ^
/src/solver_fuzzer.cc:42:48: error: destructor cannot have a return type
   42 | void Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;::~Matrix(Matrix&lt;int, -1, -1, 0, -1, -1&gt; *) {
      | ~~~~                                           ^
/src/solver_fuzzer.cc:42:48: error: destructor cannot have any parameters
/src/solver_fuzzer.cc:42:48: error: template specialization requires &#39;template&lt;&gt;&#39;
   42 | void Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;::~Matrix(Matrix&lt;int, -1, -1, 0, -1, -1&gt; *) {
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  ^
      | template&lt;&gt;
&lt;/error&gt;

Fix code:
1. Consider possible solutions for the issues listed above.
2. Choose a solution that can maximize fuzzing result, which is utilizing the function under test and feeding it not null input.
3. Apply the solutions to the original code.
It&#39;s important to show the complete code, not only the fixed line.
&lt;solution&gt;
</pre>



<h3>Code #1</h3>

<pre>
Here&#39;s the corrected code with the necessary fixes applied:

```cpp
#include &lt;fuzzer/FuzzedDataProvider.h&gt;
#include &lt;Eigen/Dense&gt;

using Eigen::Matrix;

extern &#34;C&#34; int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);

  // Create a Matrix&lt;int, Eigen::Dynamic, Eigen::Dynamic&gt; object
  int rows = stream.ConsumeIntegralInRange&lt;int&gt;(1, 10);
  int cols = stream.ConsumeIntegralInRange&lt;int&gt;(1, 10);
  Matrix&lt;int, Eigen::Dynamic, Eigen::Dynamic&gt; int_matrix(rows, cols);

  // Fill the matrix with some values
  for (int i = 0; i &lt; rows; ++i) {
    for (int j = 0; j &lt; cols; ++j) {
      int_matrix(i, j) = stream.ConsumeIntegral&lt;int&gt;();
    }
  }

  // Create a Matrix&lt;double, Eigen::Dynamic, Eigen::Dynamic&gt; object
  Matrix&lt;double, Eigen::Dynamic, Eigen::Dynamic&gt;* double_matrix =
      new Matrix&lt;double, Eigen::Dynamic, Eigen::Dynamic&gt;(rows, cols);

  // Fill the matrix with some values
  for (int i = 0; i &lt; rows; ++i) {
    for (int j = 0; j &lt; cols; ++j) {
      (*double_matrix)(i, j) = stream.ConsumeFloatingPoint&lt;double&gt;();
    }
  }

  // Perform some operations on the matrices to utilize them
  Matrix&lt;int, Eigen::Dynamic, Eigen::Dynamic&gt; int_matrix_transpose = int_matrix.transpose();
  Matrix&lt;double, Eigen::Dynamic, Eigen::Dynamic&gt; double_matrix_transpose = double_matrix-&gt;transpose();

  // Clean up
  delete double_matrix;

  return 0;
}
```

Changes made:
1. Removed the incorrect destructor call `double_matrix-&gt;~Matrix(&amp;int_matrix);`. Destructors in C++ do not take parameters and are called automatically when an object goes out of scope or is deleted.
2. Removed the incorrect destructor definition at the end of the code.
3. Added some matrix operations (`transpose()`) to utilize the matrices, ensuring that the matrices are not just created and filled but also used in some meaningful way. This helps maximize the fuzzing results.
</pre>


<h2>Logs</h2>
<pre>
Fixing /home/kaixuan/FDG_LLM/oss-fuzz-gen/results/output-eigen-_zn5eigen6matrixidlin1elin1eli0elin1elin1eed2ev/fixed_targets/01.cc with gpt-4o, attempt 1.
Successfully built /home/kaixuan/FDG_LLM/oss-fuzz-gen/results/output-eigen-_zn5eigen6matrixidlin1elin1eli0elin1elin1eed2ev/fixed_targets/01.cc with gpt-4o in 1 iterations of fixing.
Result for eigen-zn5eigen6matrixidlin1elin1eli0elin1elin1eed2ev-01: crashes=False, coverage=0.43478260869565216 (90/207), coverage diff=0.012121212121212121 (66/5445)

</pre>

<h2>Run logs</h2>
<pre>
INFO:__main__:Running: docker run --rm --privileged --shm-size=2g --platform linux/amd64 -e FUZZING_ENGINE=libfuzzer -e SANITIZER=address -e RUN_FUZZER_MODE=interactive -e HELPER=True -v /home/kaixuan/FDG_LLM/oss-fuzz-gen/results/output-eigen-_zn5eigen6matrixidlin1elin1eli0elin1elin1eed2ev/corpora/01.cc:/tmp/solver_fuzzer_corpus -v /tmp/tmptrp7ybx_/build/out/eigen-zn5eigen6matrixidlin1elin1eli0elin1elin1eed2ev-01:/out -t gcr.io/oss-fuzz-base/base-runner run_fuzzer solver_fuzzer -print_final_stats=1 -max_total_time=30 -len_control=0 -timeout=30.
vm.mmap_rnd_bits = 28
rm: cannot remove &#39;/tmp/solver_fuzzer_corpus&#39;: Device or resource busy
/out/solver_fuzzer -rss_limit_mb=2560 -timeout=25 -print_final_stats=1 -max_total_time=30 -len_control=0 -timeout=30 /tmp/solver_fuzzer_corpus &lt; /dev/null
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 687208740
INFO: Loaded 1 modules   (207 inline 8-bit counters): 207 [0x55c1bf83f460, 0x55c1bf83f52f),
INFO: Loaded 1 PC tables (207 PCs): 207 [0x55c1bf83f530,0x55c1bf840220),
INFO:        0 files found in /tmp/solver_fuzzer_corpus
INFO: -max_len is not provided; libFuzzer will not generate inputs larger than 4096 bytes
INFO: A corpus is not provided, starting from an empty corpus
#2	INITED cov: 65 ft: 66 corp: 1/1b exec/s: 0 rss: 29Mb
#3	NEW    cov: 71 ft: 82 corp: 2/2b lim: 4096 exec/s: 0 rss: 30Mb L: 1/1 MS: 1 ChangeBit-
#4	NEW    cov: 81 ft: 98 corp: 3/4b lim: 4096 exec/s: 0 rss: 30Mb L: 2/2 MS: 1 CopyPart-
#8	NEW    cov: 81 ft: 108 corp: 4/6b lim: 4096 exec/s: 0 rss: 30Mb L: 2/2 MS: 4 ShuffleBytes-ChangeBit-InsertByte-ChangeByte-
#12	NEW    cov: 81 ft: 126 corp: 5/8b lim: 4096 exec/s: 0 rss: 30Mb L: 2/2 MS: 4 EraseBytes-CrossOver-CrossOver-InsertByte-
#13	NEW    cov: 81 ft: 130 corp: 6/10b lim: 4096 exec/s: 0 rss: 30Mb L: 2/2 MS: 1 ChangeByte-
#15	NEW    cov: 84 ft: 137 corp: 7/13b lim: 4096 exec/s: 0 rss: 30Mb L: 3/3 MS: 2 ChangeByte-CrossOver-
#17	NEW    cov: 84 ft: 141 corp: 8/14b lim: 4096 exec/s: 0 rss: 30Mb L: 1/3 MS: 2 EraseBytes-ChangeByte-
#24	NEW    cov: 84 ft: 142 corp: 9/17b lim: 4096 exec/s: 0 rss: 30Mb L: 3/3 MS: 2 CrossOver-CopyPart-
#25	NEW    cov: 84 ft: 155 corp: 10/18b lim: 4096 exec/s: 0 rss: 30Mb L: 1/3 MS: 1 ChangeBinInt-
#27	NEW    cov: 89 ft: 161 corp: 11/105b lim: 4096 exec/s: 0 rss: 30Mb L: 87/87 MS: 2 EraseBytes-InsertRepeatedBytes-
#29	NEW    cov: 89 ft: 165 corp: 12/107b lim: 4096 exec/s: 0 rss: 30Mb L: 2/87 MS: 2 ShuffleBytes-ChangeByte-
#32	NEW    cov: 89 ft: 166 corp: 13/111b lim: 4096 exec/s: 0 rss: 30Mb L: 4/87 MS: 3 InsertByte-ChangeASCIIInt-CrossOver-
#36	NEW    cov: 89 ft: 168 corp: 14/122b lim: 4096 exec/s: 0 rss: 30Mb L: 11/87 MS: 4 ChangeBit-InsertByte-EraseBytes-InsertRepeatedBytes-
#37	NEW    cov: 90 ft: 172 corp: 15/210b lim: 4096 exec/s: 0 rss: 30Mb L: 88/88 MS: 1 InsertRepeatedBytes-
#44	NEW    cov: 90 ft: 177 corp: 16/370b lim: 4096 exec/s: 0 rss: 30Mb L: 160/160 MS: 2 ChangeBit-CopyPart-
#60	NEW    cov: 90 ft: 182 corp: 17/451b lim: 4096 exec/s: 0 rss: 30Mb L: 81/160 MS: 1 InsertRepeatedBytes-
#71	NEW    cov: 90 ft: 183 corp: 18/466b lim: 4096 exec/s: 0 rss: 31Mb L: 15/160 MS: 1 CMP- DE: &#34;\000\000\000\000&#34;-
#72	NEW    cov: 90 ft: 184 corp: 19/470b lim: 4096 exec/s: 0 rss: 31Mb L: 4/160 MS: 1 CMP- DE: &#34;\000\000\000\000&#34;-
#79	NEW    cov: 90 ft: 188 corp: 20/472b lim: 4096 exec/s: 0 rss: 31Mb L: 2/160 MS: 2 CopyPart-ChangeASCIIInt-
#82	NEW    cov: 90 ft: 191 corp: 21/678b lim: 4096 exec/s: 0 rss: 31Mb L: 206/206 MS: 3 InsertRepeatedBytes-CopyPart-CopyPart-
#93	NEW    cov: 90 ft: 192 corp: 22/683b lim: 4096 exec/s: 0 rss: 31Mb L: 5/206 MS: 1 CrossOver-
#106	NEW    cov: 90 ft: 194 corp: 23/705b lim: 4096 exec/s: 0 rss: 31Mb L: 22/206 MS: 3 CrossOver-InsertByte-InsertRepeatedBytes-
#123	NEW    cov: 90 ft: 195 corp: 24/715b lim: 4096 exec/s: 0 rss: 31Mb L: 10/206 MS: 2 CopyPart-PersAutoDict- DE: &#34;\000\000\000\000&#34;-
#145	NEW    cov: 90 ft: 200 corp: 25/721b lim: 4096 exec/s: 0 rss: 31Mb L: 6/206 MS: 2 ChangeBit-PersAutoDict- DE: &#34;\000\000\000\000&#34;-
#187	NEW    cov: 90 ft: 204 corp: 26/727b lim: 4096 exec/s: 0 rss: 31Mb L: 6/206 MS: 2 PersAutoDict-ShuffleBytes- DE: &#34;\000\000\000\000&#34;-
#193	NEW    cov: 90 ft: 205 corp: 27/748b lim: 4096 exec/s: 0 rss: 31Mb L: 21/206 MS: 1 InsertRepeatedBytes-
#231	NEW    cov: 90 ft: 206 corp: 28/1015b lim: 4096 exec/s: 0 rss: 31Mb L: 267/267 MS: 3 ShuffleBytes-CopyPart-InsertRepeatedBytes-
#257	NEW    cov: 90 ft: 210 corp: 29/1073b lim: 4096 exec/s: 0 rss: 31Mb L: 58/267 MS: 1 InsertRepeatedBytes-
#266	NEW    cov: 90 ft: 214 corp: 30/1379b lim: 4096 exec/s: 0 rss: 31Mb L: 306/306 MS: 4 ChangeBinInt-CopyPart-PersAutoDict-InsertRepeatedBytes- DE: &#34;\000\000\000\000&#34;-
#271	NEW    cov: 90 ft: 215 corp: 31/1430b lim: 4096 exec/s: 0 rss: 31Mb L: 51/306 MS: 5 CrossOver-PersAutoDict-PersAutoDict-PersAutoDict-InsertRepeatedBytes- DE: &#34;\000\000\000\000&#34;-&#34;\000\000\000\000&#34;-&#34;\000\000\000\000&#34;-
#292	REDUCE cov: 90 ft: 215 corp: 31/1429b lim: 4096 exec/s: 0 rss: 31Mb L: 5/306 MS: 1 EraseBytes-
#310	NEW    cov: 90 ft: 216 corp: 32/1648b lim: 4096 exec/s: 0 rss: 31Mb L: 219/306 MS: 3 InsertRepeatedBytes-CopyPart-InsertRepeatedBytes-
#320	NEW    cov: 90 ft: 217 corp: 33/1777b lim: 4096 exec/s: 0 rss: 31Mb L: 129/306 MS: 5 PersAutoDict-CrossOver-PersAutoDict-PersAutoDict-CrossOver- DE: &#34;\000\000\000\000&#34;-&#34;\000\000\000\000&#34;-&#34;\000\000\000\000&#34;-
#368	NEW    cov: 90 ft: 218 corp: 34/1785b lim: 4096 exec/s: 0 rss: 31Mb L: 8/306 MS: 3 EraseBytes-ChangeBit-CMP- DE: &#34;\377\377&#34;-
#383	REDUCE cov: 90 ft: 218 corp: 34/1784b lim: 4096 exec/s: 0 rss: 31Mb L: 10/306 MS: 5 InsertByte-ChangeBinInt-EraseBytes-ChangeBit-InsertByte-
#385	NEW    cov: 90 ft: 220 corp: 35/1854b lim: 4096 exec/s: 0 rss: 31Mb L: 70/306 MS: 2 ChangeBit-InsertRepeatedBytes-
#387	REDUCE cov: 90 ft: 220 corp: 35/1853b lim: 4096 exec/s: 0 rss: 31Mb L: 1/306 MS: 2 ChangeBinInt-EraseBytes-
#415	NEW    cov: 90 ft: 224 corp: 36/1855b lim: 4096 exec/s: 0 rss: 31Mb L: 2/306 MS: 3 ChangeBit-ChangeBit-InsertByte-
#420	NEW    cov: 90 ft: 225 corp: 37/2020b lim: 4096 exec/s: 0 rss: 31Mb L: 165/306 MS: 5 EraseBytes-CrossOver-CrossOver-InsertRepeatedBytes-CrossOver-
#433	REDUCE cov: 90 ft: 225 corp: 37/2014b lim: 4096 exec/s: 0 rss: 31Mb L: 64/306 MS: 3 InsertByte-ChangeByte-EraseBytes-
#524	NEW    cov: 90 ft: 227 corp: 38/2441b lim: 4096 exec/s: 0 rss: 32Mb L: 427/427 MS: 1 CrossOver-
#682	REDUCE cov: 90 ft: 227 corp: 38/2438b lim: 4096 exec/s: 0 rss: 32Mb L: 1/427 MS: 3 EraseBytes-EraseBytes-ChangeBit-
#683	REDUCE cov: 90 ft: 227 corp: 38/2434b lim: 4096 exec/s: 0 rss: 32Mb L: 47/427 MS: 1 EraseBytes-
#684	REDUCE cov: 90 ft: 227 corp: 38/2400b lim: 4096 exec/s: 0 rss: 32Mb L: 54/427 MS: 1 EraseBytes-
#685	NEW    cov: 90 ft: 228 corp: 39/2831b lim: 4096 exec/s: 0 rss: 32Mb L: 431/431 MS: 1 CrossOver-
#711	REDUCE cov: 90 ft: 228 corp: 39/2822b lim: 4096 exec/s: 0 rss: 32Mb L: 55/431 MS: 1 EraseBytes-
#719	NEW    cov: 90 ft: 229 corp: 40/3388b lim: 4096 exec/s: 0 rss: 32Mb L: 566/566 MS: 3 CrossOver-ShuffleBytes-CopyPart-
#782	REDUCE cov: 90 ft: 229 corp: 40/3281b lim: 4096 exec/s: 0 rss: 32Mb L: 459/459 MS: 3 InsertRepeatedBytes-ChangeBinInt-EraseBytes-
#795	REDUCE cov: 90 ft: 229 corp: 40/3273b lim: 4096 exec/s: 0 rss: 32Mb L: 47/459 MS: 3 ChangeBinInt-ChangeBinInt-EraseBytes-
#862	REDUCE cov: 90 ft: 229 corp: 40/3270b lim: 4096 exec/s: 0 rss: 32Mb L: 303/459 MS: 2 PersAutoDict-EraseBytes- DE: &#34;\000\000\000\000&#34;-
#1149	REDUCE cov: 90 ft: 229 corp: 40/3260b lim: 4096 exec/s: 0 rss: 32Mb L: 37/459 MS: 2 ChangeASCIIInt-EraseBytes-
#1231	REDUCE cov: 90 ft: 229 corp: 40/3258b lim: 4096 exec/s: 0 rss: 33Mb L: 4/459 MS: 2 ShuffleBytes-EraseBytes-
#1333	REDUCE cov: 90 ft: 229 corp: 40/3257b lim: 4096 exec/s: 0 rss: 33Mb L: 3/459 MS: 2 ChangeBinInt-EraseBytes-
#1882	REDUCE cov: 90 ft: 229 corp: 40/3249b lim: 4096 exec/s: 0 rss: 33Mb L: 46/459 MS: 4 InsertByte-ChangeBinInt-CrossOver-EraseBytes-
#2011	REDUCE cov: 90 ft: 229 corp: 40/3248b lim: 4096 exec/s: 0 rss: 33Mb L: 2/459 MS: 4 ShuffleBytes-ChangeBit-EraseBytes-ChangeBit-
#2057	REDUCE cov: 90 ft: 229 corp: 40/3247b lim: 4096 exec/s: 0 rss: 33Mb L: 57/459 MS: 1 EraseBytes-
#2219	REDUCE cov: 90 ft: 229 corp: 40/3175b lim: 4096 exec/s: 0 rss: 34
...truncated...
Mb L: 40/434 MS: 3 ChangeBinInt-CopyPart-EraseBytes-
#34662	REDUCE cov: 90 ft: 229 corp: 40/2985b lim: 4096 exec/s: 0 rss: 50Mb L: 39/434 MS: 2 ShuffleBytes-EraseBytes-
#37532	REDUCE cov: 90 ft: 229 corp: 40/2951b lim: 4096 exec/s: 0 rss: 50Mb L: 123/434 MS: 5 ChangeASCIIInt-ChangeByte-PersAutoDict-EraseBytes-CopyPart- DE: &#34;\377\377\377\377\377\377\377\037&#34;-
#39353	REDUCE cov: 90 ft: 229 corp: 40/2949b lim: 4096 exec/s: 0 rss: 50Mb L: 37/434 MS: 1 EraseBytes-
#39579	REDUCE cov: 90 ft: 229 corp: 40/2917b lim: 4096 exec/s: 0 rss: 50Mb L: 91/434 MS: 1 EraseBytes-
#40509	REDUCE cov: 90 ft: 229 corp: 40/2910b lim: 4096 exec/s: 0 rss: 50Mb L: 84/434 MS: 5 InsertByte-CopyPart-InsertByte-ChangeBit-EraseBytes-
#41200	REDUCE cov: 90 ft: 229 corp: 40/2904b lim: 4096 exec/s: 0 rss: 50Mb L: 78/434 MS: 1 EraseBytes-
#41317	REDUCE cov: 90 ft: 229 corp: 40/2874b lim: 4096 exec/s: 0 rss: 50Mb L: 48/434 MS: 2 ChangeByte-EraseBytes-
#45532	REDUCE cov: 90 ft: 229 corp: 40/2834b lim: 4096 exec/s: 0 rss: 50Mb L: 251/434 MS: 5 EraseBytes-ChangeBinInt-CrossOver-ChangeBit-InsertRepeatedBytes-
#46152	REDUCE cov: 90 ft: 229 corp: 40/2797b lim: 4096 exec/s: 0 rss: 50Mb L: 214/434 MS: 5 ChangeBit-ChangeByte-CrossOver-ShuffleBytes-EraseBytes-
#48026	REDUCE cov: 90 ft: 229 corp: 40/2789b lim: 4096 exec/s: 0 rss: 51Mb L: 40/434 MS: 4 PersAutoDict-PersAutoDict-ChangeByte-EraseBytes- DE: &#34;\377\377\377\377\377\377\377\377&#34;-&#34;\000\000&#34;-
#48719	REDUCE cov: 90 ft: 229 corp: 40/2786b lim: 4096 exec/s: 0 rss: 51Mb L: 211/434 MS: 3 ShuffleBytes-ChangeByte-EraseBytes-
#61922	REDUCE cov: 90 ft: 229 corp: 40/2783b lim: 4096 exec/s: 0 rss: 51Mb L: 37/434 MS: 3 ShuffleBytes-ChangeBit-EraseBytes-
#103498	REDUCE cov: 90 ft: 229 corp: 40/2782b lim: 4096 exec/s: 0 rss: 51Mb L: 36/434 MS: 1 EraseBytes-
#116513	REDUCE cov: 90 ft: 229 corp: 40/2781b lim: 4096 exec/s: 0 rss: 51Mb L: 265/434 MS: 5 InsertRepeatedBytes-ChangeBinInt-InsertByte-CopyPart-EraseBytes-
#123196	REDUCE cov: 90 ft: 229 corp: 40/2780b lim: 4096 exec/s: 0 rss: 51Mb L: 429/434 MS: 3 PersAutoDict-ChangeBinInt-EraseBytes- DE: &#34;\377\377&#34;-
#128414	REDUCE cov: 90 ft: 229 corp: 40/2773b lim: 4096 exec/s: 0 rss: 51Mb L: 50/434 MS: 3 PersAutoDict-CopyPart-EraseBytes- DE: &#34;\377\377\377\377\377\377\377\037&#34;-
#133525	REDUCE cov: 90 ft: 229 corp: 40/2772b lim: 4096 exec/s: 133525 rss: 51Mb L: 49/434 MS: 1 EraseBytes-
#134283	REDUCE cov: 90 ft: 229 corp: 40/2770b lim: 4096 exec/s: 134283 rss: 51Mb L: 47/434 MS: 3 PersAutoDict-CMP-EraseBytes- DE: &#34;\001\000\000\000&#34;-&#34;\001\000\000\010&#34;-
#141430	REDUCE cov: 90 ft: 229 corp: 40/2761b lim: 4096 exec/s: 141430 rss: 51Mb L: 38/434 MS: 2 CMP-EraseBytes- DE: &#34;*\000\000\000\000\000\000\000&#34;-
#143688	REDUCE cov: 90 ft: 229 corp: 40/2760b lim: 4096 exec/s: 143688 rss: 51Mb L: 37/434 MS: 3 InsertByte-EraseBytes-PersAutoDict- DE: &#34;\377\377\377\377\377\377\377\037&#34;-
#144379	REDUCE cov: 90 ft: 229 corp: 40/2757b lim: 4096 exec/s: 144379 rss: 51Mb L: 34/434 MS: 1 EraseBytes-
#165876	REDUCE cov: 90 ft: 229 corp: 40/2756b lim: 4096 exec/s: 165876 rss: 51Mb L: 33/434 MS: 2 ShuffleBytes-EraseBytes-
#178976	REDUCE cov: 90 ft: 229 corp: 40/2733b lim: 4096 exec/s: 178976 rss: 51Mb L: 242/434 MS: 5 ChangeBinInt-ChangeByte-ChangeBinInt-InsertByte-EraseBytes-
#179038	REDUCE cov: 90 ft: 229 corp: 40/2709b lim: 4096 exec/s: 179038 rss: 51Mb L: 218/434 MS: 2 InsertRepeatedBytes-EraseBytes-
#197173	REDUCE cov: 90 ft: 229 corp: 40/2708b lim: 4096 exec/s: 197173 rss: 51Mb L: 217/434 MS: 5 ChangeASCIIInt-EraseBytes-ChangeBit-CMP-PersAutoDict- DE: &#34;\377\377\377\377\377\377\377\377&#34;-&#34;\001\000\000\000&#34;-
#198263	REDUCE cov: 90 ft: 229 corp: 40/2684b lim: 4096 exec/s: 198263 rss: 51Mb L: 114/434 MS: 5 CopyPart-ChangeBinInt-EraseBytes-CMP-PersAutoDict- DE: &#34;\377\377&#34;-&#34;\377\377\377\377\377\377\377\037&#34;-
#199650	REDUCE cov: 90 ft: 229 corp: 40/2682b lim: 4096 exec/s: 199650 rss: 51Mb L: 112/434 MS: 2 InsertByte-EraseBytes-
#200661	REDUCE cov: 90 ft: 229 corp: 40/2677b lim: 4096 exec/s: 200661 rss: 51Mb L: 107/434 MS: 1 EraseBytes-
#201323	REDUCE cov: 90 ft: 229 corp: 40/2674b lim: 4096 exec/s: 201323 rss: 51Mb L: 426/434 MS: 2 PersAutoDict-EraseBytes- DE: &#34;\377\377\377\377\377\377\377\377&#34;-
#209229	REDUCE cov: 90 ft: 229 corp: 40/2673b lim: 4096 exec/s: 209229 rss: 51Mb L: 210/434 MS: 1 EraseBytes-
#230077	REDUCE cov: 90 ft: 229 corp: 40/2672b lim: 4096 exec/s: 230077 rss: 51Mb L: 216/434 MS: 3 InsertRepeatedBytes-ChangeBinInt-EraseBytes-
#247217	REDUCE cov: 90 ft: 229 corp: 40/2671b lim: 4096 exec/s: 123608 rss: 52Mb L: 106/434 MS: 5 ChangeByte-ChangeBit-ChangeByte-ChangeBit-EraseBytes-
#262144	pulse  cov: 90 ft: 229 corp: 40/2671b lim: 4096 exec/s: 131072 rss: 52Mb
#297886	REDUCE cov: 90 ft: 229 corp: 40/2670b lim: 4096 exec/s: 148943 rss: 52Mb L: 215/434 MS: 4 CrossOver-EraseBytes-InsertByte-InsertRepeatedBytes-
#298480	REDUCE cov: 90 ft: 229 corp: 40/2627b lim: 4096 exec/s: 149240 rss: 52Mb L: 58/434 MS: 4 ShuffleBytes-EraseBytes-ChangeBit-EraseBytes-
#302055	REDUCE cov: 90 ft: 229 corp: 40/2623b lim: 4096 exec/s: 151027 rss: 52Mb L: 54/434 MS: 5 InsertByte-ChangeByte-ChangeBinInt-ShuffleBytes-EraseBytes-
#302974	REDUCE cov: 90 ft: 229 corp: 40/2622b lim: 4096 exec/s: 151487 rss: 52Mb L: 53/434 MS: 4 ChangeBit-ChangeBit-InsertByte-EraseBytes-
#303892	REDUCE cov: 90 ft: 229 corp: 40/2612b lim: 4096 exec/s: 151946 rss: 52Mb L: 43/434 MS: 3 ChangeBit-EraseBytes-CopyPart-
#311240	REDUCE cov: 90 ft: 229 corp: 40/2611b lim: 4096 exec/s: 155620 rss: 52Mb L: 42/434 MS: 3 InsertByte-EraseBytes-CrossOver-
#318812	REDUCE cov: 90 ft: 229 corp: 40/2610b lim: 4096 exec/s: 159406 rss: 52Mb L: 41/434 MS: 2 EraseBytes-CMP- DE: &#34;\002\000\000\000\000\000\000\000&#34;-
#325759	REDUCE cov: 90 ft: 229 corp: 40/2596b lim: 4096 exec/s: 162879 rss: 52Mb L: 204/434 MS: 2 ChangeByte-CrossOver-
#460482	REDUCE cov: 90 ft: 229 corp: 40/2592b lim: 4096 exec/s: 153494 rss: 52Mb L: 32/434 MS: 3 InsertByte-CrossOver-EraseBytes-
#485032	REDUCE cov: 90 ft: 229 corp: 40/2588b lim: 4096 exec/s: 161677 rss: 52Mb L: 33/434 MS: 5 CrossOver-ChangeASCIIInt-ShuffleBytes-EraseBytes-CrossOver-
#512670	REDUCE cov: 90 ft: 229 corp: 40/2587b lim: 4096 exec/s: 128167 rss: 52Mb L: 203/434 MS: 3 ShuffleBytes-InsertByte-EraseBytes-
#524288	pulse  cov: 90 ft: 229 corp: 40/2587b lim: 4096 exec/s: 131072 rss: 52Mb
#572794	REDUCE cov: 90 ft: 229 corp: 40/2586b lim: 4096 exec/s: 143198 rss: 52Mb L: 202/434 MS: 4 EraseBytes-ChangeByte-CopyPart-PersAutoDict- DE: &#34;\000\000&#34;-
#763648	REDUCE cov: 90 ft: 229 corp: 40/2573b lim: 4096 exec/s: 152729 rss: 53Mb L: 74/434 MS: 4 ChangeByte-CrossOver-EraseBytes-EraseBytes-
#770388	REDUCE cov: 90 ft: 229 corp: 40/2562b lim: 4096 exec/s: 154077 rss: 53Mb L: 21/434 MS: 5 InsertByte-CMP-ChangeBinInt-ChangeByte-EraseBytes- DE: &#34;\016\000\000\000\000\000\000\000&#34;-
#775001	REDUCE cov: 90 ft: 229 corp: 40/2561b lim: 4096 exec/s: 155000 rss: 53Mb L: 20/434 MS: 3 CMP-ChangeByte-EraseBytes- DE: &#34;\000\000\000\000&#34;-
#778888	REDUCE cov: 90 ft: 229 corp: 40/2560b lim: 4096 exec/s: 155777 rss: 53Mb L: 73/434 MS: 2 InsertByte-EraseBytes-
#785966	REDUCE cov: 90 ft: 229 corp: 40/2558b lim: 4096 exec/s: 157193 rss: 53Mb L: 71/434 MS: 3 CopyPart-InsertRepeatedBytes-EraseBytes-
#1048576	pulse  cov: 90 ft: 229 corp: 40/2558b lim: 4096 exec/s: 149796 rss: 53Mb
#2097152	pulse  cov: 90 ft: 229 corp: 40/2558b lim: 4096 exec/s: 110376 rss: 54Mb
#3194206	DONE   cov: 90 ft: 229 corp: 40/2558b lim: 4096 exec/s: 103038 rss: 54Mb
###### Recommended dictionary. ######
&#34;\000\000\000\000&#34; # Uses: 28752
&#34;\377\377&#34; # Uses: 31152
&#34;\377\377\377\377\377\377\377\037&#34; # Uses: 27275
&#34;\377\377\377\377\377\377\377\377&#34; # Uses: 26913
&#34;\001\000\000\000&#34; # Uses: 28239
&#34;\000\000&#34; # Uses: 30685
&#34;\001\000\000\010&#34; # Uses: 26288
&#34;*\000\000\000\000\000\000\000&#34; # Uses: 25253
&#34;\002\000\000\000\000\000\000\000&#34; # Uses: 23379
&#34;\016\000\000\000\000\000\000\000&#34; # Uses: 19416
###### End of recommended dictionary. ######
Done 3194206 runs in 31 second(s)
stat::number_of_executed_units: 3194206
stat::average_exec_per_sec:     103038
stat::new_units_added:          152
stat::slowest_unit_time_sec:    0
stat::peak_rss_mb:              54

</pre>

</body>