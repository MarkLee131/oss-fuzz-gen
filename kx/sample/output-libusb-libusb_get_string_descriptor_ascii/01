<!doctype html>

<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>Experiment results</title>
<style>
* {
    box-sizing: border-box;
}

html {
    line-height: 1.15;
}

body {
    font-family: sans-serif;
    font-size: 16px;
}

table {
    border-collapse: collapse;
    border-spacing: 0;
}

td, th {
    border-right: 1px #dedede solid;
    border-bottom: 1px #dedede solid;
    padding: 5px;
    text-align: left;
}
td:first-child, th:first-child {
    border-left: 1px #dedede solid;
}
th {
    border-top: 1px #dedede solid;
}

tbody tr:nth-child(odd) {
    background-color: #f4f5ff;
}
</style>
<body>
    LLM: 
    
<h1>output-libusb-libusb_get_string_descriptor_ascii / 01</h1>
Bug: True
<br>
Crash reason: NO_SEMANTIC_ERR
<br>
<br>




<h3>Final code</h3>

<pre>
#include &lt;fuzzer/FuzzedDataProvider.h&gt;
#include &lt;libusb.h&gt;

int libusb_get_string_descriptor_ascii(libusb_device_handle *, uint8_t, unsigned char *, int);

extern &#34;C&#34; int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
    FuzzedDataProvider stream(data, size);

    // Generate a libusb_device_handle pointer (mocked for fuzzing purposes)
    libusb_device_handle *dev_handle = reinterpret_cast&lt;libusb_device_handle*&gt;(stream.ConsumeIntegral&lt;uintptr_t&gt;());

    // Generate a uint8_t value for desc_index
    uint8_t desc_index = stream.ConsumeIntegral&lt;uint8_t&gt;();

    // Generate a length for the data buffer
    int length = stream.ConsumeIntegralInRange&lt;int&gt;(1, 256);

    // Create a buffer for the data
    std::vector&lt;unsigned char&gt; data_buffer(length);
    unsigned char *data_ptr = data_buffer.data();

    // Call the function to fuzz
    libusb_get_string_descriptor_ascii(dev_handle, desc_index, data_ptr, length);

    return 0;
}
</pre>


<h2>Logs</h2>
<pre>
Successfully built /home/kaixuan/FDG_LLM/oss-fuzz-gen/results/output-libusb-libusb_get_string_descriptor_ascii/fixed_targets/01.cc with gpt-4o in 0 iterations of fixing.
Result for libusb-libusb_get_string_descriptor_ascii-01: crashes=True, coverage=0.006149116064565719 (16/2602), coverage diff=0.001064773735581189 (6/5635)

</pre>

<h2>Run logs</h2>
<pre>
INFO:__main__:Running: docker run --rm --privileged --shm-size=2g --platform linux/amd64 -e FUZZING_ENGINE=libfuzzer -e SANITIZER=address -e RUN_FUZZER_MODE=interactive -e HELPER=True -v /home/kaixuan/FDG_LLM/oss-fuzz-gen/results/output-libusb-libusb_get_string_descriptor_ascii/corpora/01.cc:/tmp/libusb_fuzzer_corpus -v /tmp/tmptrp7ybx_/build/out/libusb-libusb_get_string_descriptor_ascii-01:/out -t gcr.io/oss-fuzz-base/base-runner run_fuzzer libusb_fuzzer -print_final_stats=1 -max_total_time=30 -len_control=0 -timeout=30.
vm.mmap_rnd_bits = 28
rm: cannot remove &#39;/tmp/libusb_fuzzer_corpus&#39;: Device or resource busy
/out/libusb_fuzzer -rss_limit_mb=2560 -timeout=25 -print_final_stats=1 -max_total_time=30 -len_control=0 -timeout=30 /tmp/libusb_fuzzer_corpus &lt; /dev/null
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 1290192815
INFO: Loaded 1 modules   (2602 inline 8-bit counters): 2602 [0x55ee031d5e78, 0x55ee031d68a2), 
INFO: Loaded 1 PC tables (2602 PCs): 2602 [0x55ee031d68a8,0x55ee031e0b48), 
INFO:        0 files found in /tmp/libusb_fuzzer_corpus
INFO: -max_len is not provided; libFuzzer will not generate inputs larger than 4096 bytes
INFO: A corpus is not provided, starting from an empty corpus
#2	INITED cov: 16 ft: 17 corp: 1/1b exec/s: 0 rss: 30Mb
#5	NEW    cov: 16 ft: 19 corp: 2/3b lim: 4096 exec/s: 0 rss: 31Mb L: 2/2 MS: 3 ChangeByte-ChangeByte-InsertByte-
AddressSanitizer:DEADLYSIGNAL
=================================================================
[1m[31m==12==ERROR: AddressSanitizer: SEGV on unknown address 0x00000000003f (pc 0x55ee03109feb bp 0x7fffe77c7ac0 sp 0x7fffe77c7a00 T0)
[1m[0m==12==The signal is caused by a READ memory access.
==12==Hint: address points to the zero page.
SCARINESS: 10 (null-deref)
    #0 0x55ee03109feb in libusb_control_transfer /src/libusb/libusb/sync.c:112:27
    #1 0x55ee0310850e in libusb_get_string_descriptor /src/libusb/libusb/./libusb.h:2194:9
    #2 0x55ee0310850e in libusb_get_string_descriptor_ascii /src/libusb/libusb/descriptor.c:1268:6
    #3 0x55ee03101fdc in LLVMFuzzerTestOneInput /src/jcc-corrected-libusb_fuzzer.cc:23:5
    #4 0x55ee02fb46d0 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
    #5 0x55ee02fb3ef5 in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool, bool*) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:516:7
    #6 0x55ee02fb56c5 in fuzzer::Fuzzer::MutateAndTestOne() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:760:19
    #7 0x55ee02fb64b5 in fuzzer::Fuzzer::Loop(std::__Fuzzer::vector&lt;fuzzer::SizedFile, std::__Fuzzer::allocator&lt;fuzzer::SizedFile&gt;&gt;&amp;) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:905:5
    #8 0x55ee02fa47c6 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:914:6
    #9 0x55ee02fd0cf2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #10 0x7f470d3bb082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 0702430aef5fa3dda43986563e9ffcc47efbd75e)
    #11 0x55ee02f9593d in _start (/out/libusb_fuzzer+0x5f93d)

DEDUP_TOKEN: libusb_control_transfer--libusb_get_string_descriptor--libusb_get_string_descriptor_ascii
AddressSanitizer can not provide additional info.
SUMMARY: AddressSanitizer: SEGV /src/libusb/libusb/sync.c:112:27 in libusb_control_transfer
==12==ABORTING
MS: 1 InsertRepeatedBytes-; base unit: adc83b19e793491b1c6ea0fd8b46cd9f32e592fc
0xa,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
\012\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377
artifact_prefix=&#39;./&#39;; Test unit written to ./crash-768a4bce677de9f4efb771c420199a29a2b9b482
Base64: Cv//////////////////////
stat::number_of_executed_units: 6
stat::average_exec_per_sec:     6
stat::new_units_added:          1
stat::slowest_unit_time_sec:    0
stat::peak_rss_mb:              31

</pre>

</body>