<!doctype html>

<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>Experiment results</title>
<style>
* {
    box-sizing: border-box;
}

html {
    line-height: 1.15;
}

body {
    font-family: sans-serif;
    font-size: 16px;
}

table {
    border-collapse: collapse;
    border-spacing: 0;
}

td, th {
    border-right: 1px #dedede solid;
    border-bottom: 1px #dedede solid;
    padding: 5px;
    text-align: left;
}
td:first-child, th:first-child {
    border-left: 1px #dedede solid;
}
th {
    border-top: 1px #dedede solid;
}

tbody tr:nth-child(odd) {
    background-color: #f4f5ff;
}
</style>
<body>
    LLM:

<h1>output-fribidi-fribidi_log2vis / 02</h1>
Bug: False
<br>
Crash reason: NO_SEMANTIC_ERR
<br>
<br>




<h3>Final code</h3>

<pre>
#include &lt;fuzzer/FuzzedDataProvider.h&gt;
#include &lt;fribidi.h&gt;
#include &lt;vector&gt;

extern &#34;C&#34; FriBidiLevel fribidi_log2vis(const FriBidiChar *, const FriBidiStrIndex, FriBidiParType *, FriBidiChar *, FriBidiStrIndex *, FriBidiStrIndex *, FriBidiLevel *);

extern &#34;C&#34; int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
    FuzzedDataProvider stream(data, size);

    // Generate input values
    FriBidiStrIndex len = stream.ConsumeIntegralInRange&lt;FriBidiStrIndex&gt;(0, 1000);
    std::vector&lt;FriBidiChar&gt; str_vec(len);
    for (FriBidiStrIndex i = 0; i &lt; len; ++i) {
        str_vec[i] = stream.ConsumeIntegral&lt;FriBidiChar&gt;();
    }
    const FriBidiChar *str = str_vec.data();

    FriBidiParType base_dir = stream.ConsumeIntegral&lt;FriBidiParType&gt;();

    std::vector&lt;FriBidiChar&gt; visual_str_vec(len);
    FriBidiChar *visual_str = visual_str_vec.data();

    std::vector&lt;FriBidiStrIndex&gt; positions_L_to_V_vec(len);
    FriBidiStrIndex *positions_L_to_V = positions_L_to_V_vec.data();

    std::vector&lt;FriBidiStrIndex&gt; positions_V_to_L_vec(len);
    FriBidiStrIndex *positions_V_to_L = positions_V_to_L_vec.data();

    std::vector&lt;FriBidiLevel&gt; embedding_levels_vec(len);
    FriBidiLevel *embedding_levels = embedding_levels_vec.data();

    // Call the function to fuzz
    fribidi_log2vis(str, len, &amp;base_dir, visual_str, positions_L_to_V, positions_V_to_L, embedding_levels);

    return 0;
}
</pre>


<h3>Fixer prompt #1</h3>
<pre>

Given the following C++ fuzz harness and its build error message, fix the code to make it build for fuzzing.

If there is undeclared identifier or unknown type name error, fix it by finding and including the related libraries.

Note that some code may need to be wrapped with &lt;code&gt;extern &#34;C&#34;&lt;/code&gt; as their source is C program.

MUST RETURN THE FULL CODE, INCLUDING UNCHANGED PARTS.
EXTREMELY IMPORTANT: AVOID USING &lt;code&gt;goto&lt;/code&gt;. If you have to write code using &lt;code&gt;goto&lt;/code&gt;, you MUST MUST also declare all variables BEFORE the &lt;code&gt;goto&lt;/code&gt;. Never introduce new variables after the &lt;code&gt;goto&lt;/code&gt;.

Below is the code needs to be built:
&lt;code&gt;
#include &lt;fuzzer/FuzzedDataProvider.h&gt;
#include &lt;fribidi.h&gt; // Assuming the necessary FriBidi headers are included

extern &#34;C&#34; FriBidiLevel fribidi_log2vis(const FriBidiChar *, const FriBidiStrIndex, FriBidiParType *, FriBidiChar *, FriBidiStrIndex *, FriBidiStrIndex *, FriBidiLevel *);

extern &#34;C&#34; int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
    FuzzedDataProvider stream(data, size);

    // Generate input values
    FriBidiStrIndex len = stream.ConsumeIntegralInRange&lt;FriBidiStrIndex&gt;(0, 1000);
    std::vector&lt;FriBidiChar&gt; str_vec = stream.ConsumeBytes&lt;FriBidiChar&gt;(len);
    const FriBidiChar *str = str_vec.data();

    FriBidiParType base_dir = stream.ConsumeIntegral&lt;FriBidiParType&gt;();

    std::vector&lt;FriBidiChar&gt; visual_str_vec(len);
    FriBidiChar *visual_str = visual_str_vec.data();

    std::vector&lt;FriBidiStrIndex&gt; positions_L_to_V_vec(len);
    FriBidiStrIndex *positions_L_to_V = positions_L_to_V_vec.data();

    std::vector&lt;FriBidiStrIndex&gt; positions_V_to_L_vec(len);
    FriBidiStrIndex *positions_V_to_L = positions_V_to_L_vec.data();

    std::vector&lt;FriBidiLevel&gt; embedding_levels_vec(len);
    FriBidiLevel *embedding_levels = embedding_levels_vec.data();

    // Call the function to fuzz
    fribidi_log2vis(str, len, &amp;base_dir, visual_str, positions_L_to_V, positions_V_to_L,...

 --
&lt;/code&gt;

The code has the following build issues:
&lt;error&gt;
../../src/fribidi/bin/fribidi-fuzzer.cpp:29:89: error: expected expression
   29 |     fribidi_log2vis(str, len, &amp;base_dir, visual_str, positions_L_to_V, positions_V_to_L,...
      |                                                                                         ^
../../src/fribidi/bin/fribidi-fuzzer.cpp:31:4: error: expected &#39;}&#39;
   31 |  --
      |    ^
../../src/fribidi/bin/fribidi-fuzzer.cpp:6:73: note: to match this &#39;{&#39;
    6 | extern &#34;C&#34; int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
      |                                                                         ^
In file included from ../../src/fribidi/bin/fribidi-fuzzer.cpp:1:
/usr/local/lib/clang/18/include/fuzzer/FuzzedDataProvider.h:353:17: error: static assertion failed due to requirement &#39;sizeof(unsigned int) == sizeof(unsigned char)&#39;: Incompatible data type.
  353 |   static_assert(sizeof(T) == sizeof(uint8_t), &#34;Incompatible data type.&#34;);
      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/local/lib/clang/18/include/fuzzer/FuzzedDataProvider.h:110:10: note: in instantiation of function template specialization &#39;FuzzedDataProvider::ConsumeBytes&lt;unsigned int&gt;&#39; requested here
  110 |   return ConsumeBytes&lt;T&gt;(num_bytes, num_bytes);
      |          ^
../../src/fribidi/bin/fribidi-fuzzer.cpp:11:47: note: in instantiation of function template specialization &#39;FuzzedDataProvider::ConsumeBytes&lt;unsigned int&gt;&#39; requested here
   11 |     std::vector&lt;FriBidiChar&gt; str_vec = stream.ConsumeBytes&lt;FriBidiChar&gt;(len);
      |                                               ^
/usr/local/lib/clang/18/include/fuzzer/FuzzedDataProvider.h:353:27: note: expression evaluates to &#39;4 == 1&#39;
  353 |   static_assert(sizeof(T) == sizeof(uint8_t), &#34;Incompatible data type.&#34;);
      |                 ~~~~~~~~~~^~~~~~~~~~~~~~~~~~
&lt;/error&gt;

Fix code:
1. Consider possible solutions for the issues listed above.
2. Choose a solution that can maximize fuzzing result, which is utilizing the function under test and feeding it not null input.
3. Apply the solutions to the original code.
It&#39;s important to show the complete code, not only the fixed line.
&lt;solution&gt;
</pre>



<h3>Code #1</h3>

<pre>
Here is the corrected and complete C++ fuzz harness code:

```cpp
#include &lt;fuzzer/FuzzedDataProvider.h&gt;
#include &lt;fribidi.h&gt;
#include &lt;vector&gt;

extern &#34;C&#34; FriBidiLevel fribidi_log2vis(const FriBidiChar *, const FriBidiStrIndex, FriBidiParType *, FriBidiChar *, FriBidiStrIndex *, FriBidiStrIndex *, FriBidiLevel *);

extern &#34;C&#34; int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
    FuzzedDataProvider stream(data, size);

    // Generate input values
    FriBidiStrIndex len = stream.ConsumeIntegralInRange&lt;FriBidiStrIndex&gt;(0, 1000);
    std::vector&lt;FriBidiChar&gt; str_vec(len);
    for (FriBidiStrIndex i = 0; i &lt; len; ++i) {
        str_vec[i] = stream.ConsumeIntegral&lt;FriBidiChar&gt;();
    }
    const FriBidiChar *str = str_vec.data();

    FriBidiParType base_dir = stream.ConsumeIntegral&lt;FriBidiParType&gt;();

    std::vector&lt;FriBidiChar&gt; visual_str_vec(len);
    FriBidiChar *visual_str = visual_str_vec.data();

    std::vector&lt;FriBidiStrIndex&gt; positions_L_to_V_vec(len);
    FriBidiStrIndex *positions_L_to_V = positions_L_to_V_vec.data();

    std::vector&lt;FriBidiStrIndex&gt; positions_V_to_L_vec(len);
    FriBidiStrIndex *positions_V_to_L = positions_V_to_L_vec.data();

    std::vector&lt;FriBidiLevel&gt; embedding_levels_vec(len);
    FriBidiLevel *embedding_levels = embedding_levels_vec.data();

    // Call the function to fuzz
    fribidi_log2vis(str, len, &amp;base_dir, visual_str, positions_L_to_V, positions_V_to_L, embedding_levels);

    return 0;
}
```

### Explanation of the Fixes:

1. **Include Necessary Headers**: The necessary header `&lt;vector&gt;` was included to use the `std::vector` container.

2. **Fix the `ConsumeBytes` Issue**:
   - The `ConsumeBytes` method in `FuzzedDataProvider` expects the type size to be `1 byte`, but `FriBidiChar` is not `1 byte`. Instead, we use `ConsumeIntegral` in a loop to fill the vector.

3. **Complete the Function Call**:
   - The function call to `fribidi_log2vis` was completed with all required parameters.

4. **Ensure the Correct Data Types**:
   - The data types used in the function call and vector initialization were verified to ensure they match the expected types in the `fribidi_log2vis` function.

This should resolve the build issues and allow the fuzz harness to be compiled and used for fuzzing the `fribidi_log2vis` function.
</pre>


<h2>Logs</h2>
<pre>
Fixing /home/kaixuan/FDG_LLM/oss-fuzz-gen/results/output-fribidi-fribidi_log2vis/fixed_targets/02.c with gpt-4o, attempt 1.
Successfully built /home/kaixuan/FDG_LLM/oss-fuzz-gen/results/output-fribidi-fribidi_log2vis/fixed_targets/02.c with gpt-4o in 1 iterations of fixing.
Result for fribidi-fribidi_log2vis-02: crashes=False, coverage=0.5166666666666667 (589/1140), coverage diff=0.16521739130434782 (266/1610)

</pre>

<h2>Run logs</h2>
<pre>
INFO:__main__:Running: docker run --rm --privileged --shm-size=2g --platform linux/amd64 -e FUZZING_ENGINE=libfuzzer -e SANITIZER=address -e RUN_FUZZER_MODE=interactive -e HELPER=True -v /home/kaixuan/FDG_LLM/oss-fuzz-gen/results/output-fribidi-fribidi_log2vis/corpora/02.c:/tmp/fribidi-fuzzer_corpus -v /tmp/tmptrp7ybx_/build/out/fribidi-fribidi_log2vis-02:/out -t gcr.io/oss-fuzz-base/base-runner run_fuzzer fribidi-fuzzer -print_final_stats=1 -max_total_time=30 -len_control=0 -timeout=30.
vm.mmap_rnd_bits = 28
rm: cannot remove &#39;/tmp/fribidi-fuzzer_corpus&#39;: Device or resource busy
Using seed corpus: fribidi-fuzzer_seed_corpus.zip
/out/fribidi-fuzzer -rss_limit_mb=2560 -timeout=25 -print_final_stats=1 -max_total_time=30 -len_control=0 -timeout=30 /tmp/fribidi-fuzzer_corpus &lt; /dev/null
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 3178597392
INFO: Loaded 1 modules   (1140 inline 8-bit counters): 1140 [0x555672809b60, 0x555672809fd4),
INFO: Loaded 1 PC tables (1140 PCs): 1140 [0x555672809fd8,0x55567280e718),
INFO:       14 files found in /tmp/fribidi-fuzzer_corpus
INFO: -max_len is not provided; libFuzzer will not generate inputs larger than 4096 bytes
INFO: seed corpus: files: 14 min: 38b max: 2362b total: 12804b rss: 30Mb
#15	INITED cov: 295 ft: 361 corp: 8/5610b exec/s: 0 rss: 32Mb
	NEW_FUNC[1/1]: 0x555672781130 in merge_with_prev /work/build/../../src/fribidi/lib/fribidi-bidi.c:74
#24	NEW    cov: 353 ft: 474 corp: 9/5648b lim: 4096 exec/s: 24 rss: 33Mb L: 38/1928 MS: 4 ChangeBinInt-ChangeBinInt-ChangeBinInt-CopyPart-
#26	REDUCE cov: 353 ft: 474 corp: 9/5606b lim: 4096 exec/s: 26 rss: 33Mb L: 134/1928 MS: 2 ChangeBit-EraseBytes-
#28	REDUCE cov: 353 ft: 474 corp: 9/5402b lim: 4096 exec/s: 28 rss: 33Mb L: 351/1928 MS: 2 ChangeBit-EraseBytes-
#30	NEW    cov: 356 ft: 479 corp: 10/5893b lim: 4096 exec/s: 30 rss: 33Mb L: 491/1928 MS: 2 ChangeBit-EraseBytes-
#34	NEW    cov: 356 ft: 484 corp: 11/6038b lim: 4096 exec/s: 34 rss: 33Mb L: 145/1928 MS: 4 ChangeBinInt-EraseBytes-InsertRepeatedBytes-EraseBytes-
#39	REDUCE cov: 356 ft: 491 corp: 12/6154b lim: 4096 exec/s: 39 rss: 33Mb L: 116/1928 MS: 5 ChangeByte-ChangeBit-CopyPart-InsertByte-EraseBytes-
#41	NEW    cov: 356 ft: 499 corp: 13/7181b lim: 4096 exec/s: 41 rss: 33Mb L: 1027/1928 MS: 2 InsertByte-InsertRepeatedBytes-
#45	NEW    cov: 356 ft: 502 corp: 14/7773b lim: 4096 exec/s: 45 rss: 33Mb L: 592/1928 MS: 4 ChangeBinInt-InsertByte-CopyPart-InsertRepeatedBytes-
#51	NEW    cov: 356 ft: 512 corp: 15/7803b lim: 4096 exec/s: 51 rss: 34Mb L: 30/1928 MS: 1 EraseBytes-
#60	NEW    cov: 361 ft: 539 corp: 16/11580b lim: 4096 exec/s: 60 rss: 34Mb L: 3777/3777 MS: 4 ChangeByte-InsertRepeatedBytes-ChangeASCIIInt-CopyPart-
#81	NEW    cov: 368 ft: 614 corp: 17/12192b lim: 4096 exec/s: 81 rss: 34Mb L: 612/3777 MS: 1 InsertRepeatedBytes-
#90	NEW    cov: 368 ft: 616 corp: 18/13219b lim: 4096 exec/s: 90 rss: 35Mb L: 1027/3777 MS: 4 CrossOver-CrossOver-ShuffleBytes-CMP- DE: &#34;\000\000\000\000\000\000\000\000&#34;-
#94	NEW    cov: 368 ft: 634 corp: 19/15009b lim: 4096 exec/s: 94 rss: 35Mb L: 1790/3777 MS: 4 PersAutoDict-CrossOver-ChangeBit-CopyPart- DE: &#34;\000\000\000\000\000\000\000\000&#34;-
#95	REDUCE cov: 368 ft: 634 corp: 19/14676b lim: 4096 exec/s: 95 rss: 35Mb L: 616/3777 MS: 1 EraseBytes-
#100	NEW    cov: 368 ft: 635 corp: 20/15179b lim: 4096 exec/s: 100 rss: 35Mb L: 503/3777 MS: 5 ChangeBit-ChangeBit-EraseBytes-ChangeBinInt-CMP- DE: &#34;\001\000\000\000\000\000\000\000&#34;-
#109	REDUCE cov: 368 ft: 635 corp: 20/15079b lim: 4096 exec/s: 109 rss: 35Mb L: 403/3777 MS: 4 CMP-ChangeBinInt-ChangeBit-EraseBytes- DE: &#34;\003\000&#34;-
#112	NEW    cov: 368 ft: 636 corp: 21/15855b lim: 4096 exec/s: 112 rss: 35Mb L: 776/3777 MS: 3 InsertRepeatedBytes-ShuffleBytes-InsertRepeatedBytes-
#123	NEW    cov: 368 ft: 637 corp: 22/15886b lim: 4096 exec/s: 123 rss: 36Mb L: 31/3777 MS: 1 InsertByte-
#136	NEW    cov: 368 ft: 638 corp: 23/16Kb lim: 4096 exec/s: 136 rss: 36Mb L: 516/3777 MS: 3 EraseBytes-InsertRepeatedBytes-InsertByte-
#139	NEW    cov: 368 ft: 685 corp: 24/16Kb lim: 4096 exec/s: 139 rss: 36Mb L: 811/3777 MS: 3 ChangeBinInt-ChangeBit-InsertRepeatedBytes-
#153	NEW    cov: 368 ft: 686 corp: 25/16Kb lim: 4096 exec/s: 153 rss: 36Mb L: 38/3777 MS: 4 CrossOver-ShuffleBytes-ChangeByte-ChangeBinInt-
#161	REDUCE cov: 368 ft: 686 corp: 25/16Kb lim: 4096 exec/s: 161 rss: 37Mb L: 24/3777 MS: 3 InsertByte-ChangeBit-EraseBytes-
#165	NEW    cov: 368 ft: 689 corp: 26/17Kb lim: 4096 exec/s: 165 rss: 37Mb L: 667/3777 MS: 4 InsertByte-ChangeBit-ShuffleBytes-InsertRepeatedBytes-
#174	NEW    cov: 383 ft: 708 corp: 27/17Kb lim: 4096 exec/s: 174 rss: 37Mb L: 31/3777 MS: 4 ChangeBinInt-CopyPart-ChangeByte-InsertByte-
#177	NEW    cov: 383 ft: 719 corp: 28/17Kb lim: 4096 exec/s: 177 rss: 37Mb L: 61/3777 MS: 3 ChangeBinInt-CMP-CrossOver- DE: &#34;\000\000\000\000\000\000\000\000&#34;-
#178	NEW    cov: 389 ft: 725 corp: 29/18Kb lim: 4096 exec/s: 178 rss: 37Mb L: 528/3777 MS: 1 CrossOver-
#180	NEW    cov: 391 ft: 733 corp: 30/18Kb lim: 4096 exec/s: 180 rss: 37Mb L: 50/3777 MS: 2 ChangeBit-EraseBytes-
#192	NEW    cov: 391 ft: 735 corp: 31/18Kb lim: 4096 exec/s: 192 rss: 37Mb L: 46/3777 MS: 2 ShuffleBytes-CMP- DE: &#34;\001\000\000\000\000\000\000\031&#34;-
#196	NEW    cov: 391 ft: 736 corp: 32/19Kb lim: 4096 exec/s: 196 rss: 37Mb L: 1235/3777 MS: 4 CopyPart-CrossOver-CopyPart-PersAutoDict- DE: &#34;\001\000\000\000\000\000\000\000&#34;-
#198	NEW    cov: 392 ft: 737 corp: 33/19Kb lim: 4096 exec/s: 198 rss: 37Mb L: 28/3777 MS: 2 ShuffleBytes-EraseBytes-
#208	REDUCE cov: 392 ft: 752 corp: 34/19Kb lim: 4096 exec/s: 208 rss: 38Mb L: 538/3777 MS: 5 ShuffleBytes-CrossOver-CMP-CMP-InsertRepeatedBytes- DE: &#34;\377\377\377\377\377\377\377\377&#34;-&#34;\001\000\000\000\000\000\000\177&#34;-
#212	NEW    cov: 392 ft: 758 corp: 35/19Kb lim: 4096 exec/s: 212 rss: 38Mb L: 20/3777 MS: 4 InsertByte-ShuffleBytes-ShuffleBytes-EraseBytes-
#213	NEW    cov: 392 ft: 760 corp: 36/19Kb lim: 4096 exec/s: 213 rss: 38Mb L: 31/3777 MS: 1 ChangeBinInt-
#219	REDUCE cov: 392 ft: 760 corp: 36/19Kb lim: 4096 exec/s: 219 rss: 38Mb L: 1062/3777 MS: 1 EraseBytes-
#225	NEW    cov: 404 ft: 787 corp: 37/19Kb lim: 4096 exec/s: 225 rss: 38Mb L: 86/3777 MS: 1 CopyPart-
#226	NEW    cov: 404 ft: 788 corp: 38/20Kb lim: 4096 exec/s: 226 rss: 38Mb L: 1035/3777 MS: 1 PersAutoDict- DE: &#34;\001\000\000\000\000\000\000\031&#34;-
#236	NEW    cov: 405 ft: 789 corp: 39/21Kb lim: 4096 exec/s: 236 rss: 38Mb L: 893/3777 MS: 5 EraseBytes-ChangeByte-CrossOver-CrossOver-CrossOver-
#240	NEW    cov: 405 ft: 790 corp: 40/22Kb lim: 4096 exec/s: 240 rss: 38Mb L: 293/3777 MS: 4 InsertByte-ShuffleBytes-ChangeByte-PersAutoDict- DE: &#34;\001\000\000\000\000\000\000\000&#34;-
#242	NEW    cov: 405 ft: 795 corp: 41/23Kb lim: 4096 exec/s: 242 rss: 38Mb L: 1035/3777 MS: 2 ChangeASCIIInt-PersAutoDict- DE: &#34;\001\000\000\000\000\000\000\031&#34;-
#250	NEW    cov: 405 ft: 836 corp: 42/23Kb lim: 4096 exec/s: 250 rss: 38Mb L: 776/3777 MS: 3 ChangeBinInt-ChangeBit-PersAutoDict- DE: &#34;\000\000\000\000\000\000\000\000&#34;-
#257	NEW    cov: 405 ft: 837 corp: 43/24Kb lim: 4096 exec/s: 257 rss: 39Mb L: 295/3777 MS: 2 InsertByte-InsertByte-
#259	NEW    cov: 405 ft: 838 corp: 44/25Kb lim: 4096 exec/s: 259 rss: 39Mb L: 1790/3777 MS: 2 PersAutoDict-CopyPart- DE: &#34;\377\377\377\377\377\377\377\377&#34;-
#267	NEW    cov: 405 ft: 846 corp: 45/27Kb lim: 4096 exec/s: 267 rss: 39Mb L: 1978/3777 MS: 3 ShuffleBytes-ChangeASCIIInt-CopyPart-
#269	NEW    cov: 405 ft: 847 corp: 46/28Kb lim: 4096 exec/s: 269 rss: 39Mb L: 1040/3777 MS: 2 InsertByte-CMP- DE: &#34;\377\377\017\000&#34;-
#310	NEW    cov: 405 ft: 848 corp: 47/29Kb lim: 4096 exec/s: 310 rss: 40Mb L: 637/3777 MS: 1 InsertRepeatedBytes-
#319	REDUCE cov: 405 ft: 848 corp: 47/29Kb lim: 4096 exec/s: 319 rss: 40Mb L: 445/3777 MS: 4 PersAutoDict-CMP-CrossOver-EraseBytes- DE: &#34;\377\377\377\377\377\377\377\377&#34;-&#34;\000\000\000\013&#34;-
#326	NEW    cov: 406 ft: 849 corp: 48/29Kb lim: 4096 exec/s: 326 rss: 41Mb L: 34/3777 MS: 2 EraseBytes-CopyPart-
#370	NEW    cov: 406 ft: 852 corp: 49/29Kb lim: 4096 exec/s: 370 rss: 41Mb L: 328/3777 MS: 4 CrossOver-PersAutoDict-EraseBytes-EraseBytes- DE: &#34;\377\377\017\000&#34;-
#391	NEW    cov: 407 ft: 853 corp: 50/30Kb lim: 4096 exec/s: 39
...truncated...
L: 675/3822 MS: 3 ChangeByte-EraseBytes-InsertByte-
#113838	REDUCE cov: 587 ft: 2156 corp: 388/314Kb lim: 4096 exec/s: 3925 rss: 60Mb L: 356/3822 MS: 2 EraseBytes-CrossOver-
#113917	REDUCE cov: 587 ft: 2156 corp: 388/314Kb lim: 4096 exec/s: 3928 rss: 60Mb L: 89/3822 MS: 4 InsertByte-CopyPart-EraseBytes-InsertByte-
#113989	REDUCE cov: 587 ft: 2156 corp: 388/314Kb lim: 4096 exec/s: 3930 rss: 60Mb L: 55/3822 MS: 2 ShuffleBytes-EraseBytes-
#114088	REDUCE cov: 587 ft: 2156 corp: 388/314Kb lim: 4096 exec/s: 3934 rss: 60Mb L: 403/3822 MS: 4 ShuffleBytes-ChangeByte-EraseBytes-PersAutoDict- DE: &#34;\377-&#34;-
#114427	REDUCE cov: 587 ft: 2156 corp: 388/314Kb lim: 4096 exec/s: 3945 rss: 60Mb L: 555/3822 MS: 4 ChangeByte-ChangeBinInt-CrossOver-EraseBytes-
#114445	REDUCE cov: 587 ft: 2156 corp: 388/314Kb lim: 4096 exec/s: 3946 rss: 60Mb L: 264/3822 MS: 3 ShuffleBytes-InsertByte-EraseBytes-
#114539	NEW    cov: 587 ft: 2161 corp: 389/316Kb lim: 4096 exec/s: 3949 rss: 60Mb L: 2555/3822 MS: 4 CMP-InsertByte-CopyPart-CopyPart- DE: &#34;\376\377\017\000&#34;-
#114548	REDUCE cov: 587 ft: 2161 corp: 389/316Kb lim: 4096 exec/s: 3949 rss: 60Mb L: 472/3822 MS: 4 InsertRepeatedBytes-ChangeByte-EraseBytes-EraseBytes-
#114664	REDUCE cov: 587 ft: 2161 corp: 389/316Kb lim: 4096 exec/s: 3953 rss: 60Mb L: 204/3822 MS: 1 EraseBytes-
#114678	REDUCE cov: 587 ft: 2161 corp: 389/316Kb lim: 4096 exec/s: 3822 rss: 60Mb L: 392/3822 MS: 4 InsertRepeatedBytes-CMP-InsertRepeatedBytes-EraseBytes- DE: &#34;\000\000\000\000&#34;-
#114731	REDUCE cov: 587 ft: 2161 corp: 389/316Kb lim: 4096 exec/s: 3824 rss: 60Mb L: 44/3822 MS: 3 ChangeByte-ChangeBinInt-EraseBytes-
#115263	REDUCE cov: 587 ft: 2164 corp: 390/319Kb lim: 4096 exec/s: 3842 rss: 60Mb L: 2957/3822 MS: 2 EraseBytes-CrossOver-
#115506	REDUCE cov: 587 ft: 2165 corp: 391/322Kb lim: 4096 exec/s: 3850 rss: 60Mb L: 2699/3822 MS: 3 ChangeBinInt-ChangeBit-CrossOver-
#115629	REDUCE cov: 587 ft: 2165 corp: 391/322Kb lim: 4096 exec/s: 3854 rss: 60Mb L: 175/3822 MS: 3 CMP-CrossOver-EraseBytes- DE: &#34;\000\000\000\000\000\000\000\007&#34;-
#115772	NEW    cov: 589 ft: 2167 corp: 392/322Kb lim: 4096 exec/s: 3859 rss: 60Mb L: 36/3822 MS: 3 InsertRepeatedBytes-ShuffleBytes-CopyPart-
#115954	REDUCE cov: 589 ft: 2167 corp: 392/322Kb lim: 4096 exec/s: 3865 rss: 60Mb L: 2367/3822 MS: 2 ChangeByte-EraseBytes-
#115973	REDUCE cov: 589 ft: 2167 corp: 392/322Kb lim: 4096 exec/s: 3865 rss: 60Mb L: 200/3822 MS: 4 ChangeByte-CopyPart-ShuffleBytes-EraseBytes-
#115984	REDUCE cov: 589 ft: 2167 corp: 392/322Kb lim: 4096 exec/s: 3866 rss: 60Mb L: 101/3822 MS: 1 EraseBytes-
#116015	REDUCE cov: 589 ft: 2167 corp: 392/321Kb lim: 4096 exec/s: 3867 rss: 60Mb L: 749/3822 MS: 1 EraseBytes-
#116094	REDUCE cov: 589 ft: 2167 corp: 392/321Kb lim: 4096 exec/s: 3869 rss: 60Mb L: 314/3822 MS: 4 ChangeASCIIInt-InsertRepeatedBytes-ChangeBinInt-EraseBytes-
#116098	REDUCE cov: 589 ft: 2167 corp: 392/321Kb lim: 4096 exec/s: 3869 rss: 60Mb L: 291/3822 MS: 4 ChangeBinInt-ShuffleBytes-PersAutoDict-EraseBytes- DE: &#34; \000&#34;-
#116137	REDUCE cov: 589 ft: 2167 corp: 392/321Kb lim: 4096 exec/s: 3871 rss: 60Mb L: 211/3822 MS: 4 ShuffleBytes-ShuffleBytes-ShuffleBytes-EraseBytes-
#116457	DONE   cov: 589 ft: 2167 corp: 392/321Kb lim: 4096 exec/s: 3756 rss: 60Mb
###### Recommended dictionary. ######
&#34;\000\000\000\000\000\000\000\000&#34; # Uses: 138
&#34;\001\000\000\000\000\000\000\000&#34; # Uses: 158
&#34;\003\000&#34; # Uses: 181
&#34;\001\000\000\000\000\000\000\031&#34; # Uses: 163
&#34;\377\377\377\377\377\377\377\377&#34; # Uses: 163
&#34;\001\000\000\000\000\000\000\177&#34; # Uses: 154
&#34;\377\377\017\000&#34; # Uses: 152
&#34;\000\000\000\013&#34; # Uses: 173
&#34;\001\017\377\377&#34; # Uses: 147
&#34;\377\377\377\377&#34; # Uses: 165
&#34;\377\377\377\377\377\377\000*&#34; # Uses: 151
&#34;\000\000&#34; # Uses: 173
&#34;6\000\000\000\000\000\000\000&#34; # Uses: 147
&#34;\000\000\000\000\000\000\001\013&#34; # Uses: 135
&#34;` )\355&#34; # Uses: 151
&#34;\377\377\377\377\377\377\377\034&#34; # Uses: 134
&#34;\377\016\377\377&#34; # Uses: 159
&#34;s\000\000\000\000\000\000\000&#34; # Uses: 150
&#34;\377\377\377\377\377\377\377X&#34; # Uses: 161
&#34;\024\000\000\000\000\000\000\000&#34; # Uses: 135
&#34;\015\000&#34; # Uses: 170
&#34;\000\001&#34; # Uses: 160
&#34;.\000\000\000\000\000\000\000&#34; # Uses: 152
&#34;\001\000\000\000\000\000\0024&#34; # Uses: 169
&#34;\360\001\000\000\000\000\000\000&#34; # Uses: 130
&#34;+\000\000\000\000\000\000\000&#34; # Uses: 146
&#34;\000\000\000\002&#34; # Uses: 138
&#34;\&#34;\000\000\000\000\000\000\000&#34; # Uses: 134
&#34;. \000\000&#34; # Uses: 148
&#34;\034\000\000\000&#34; # Uses: 144
&#34;h\000\000\000&#34; # Uses: 138
&#34;\037\000\000\000\000\000\000\000&#34; # Uses: 119
&#34;\000\000\000\000\000\000\000F&#34; # Uses: 133
&#34;\006\000\000\000&#34; # Uses: 127
&#34;\000\000\000\000&#34; # Uses: 122
&#34; \000&#34; # Uses: 103
&#34;\033\000\000\000\000\000\000\000&#34; # Uses: 116
&#34;\000\017\377\377&#34; # Uses: 132
&#34;\016\000\000\000&#34; # Uses: 121
&#34;\376\377\017\000&#34; # Uses: 118
&#34;ar:h&#34; # Uses: 106
&#34;\001\000\000\000\000\000\000\205&#34; # Uses: 130
&#34;y\000\000\000\000\000\000\000&#34; # Uses: 90
&#34;\337\376\000\000&#34; # Uses: 118
&#34;9\000\000\000\000\000\000\000&#34; # Uses: 108
&#34;\021\000\000\000\000\000\000\000&#34; # Uses: 116
&#34;\376\377\377\377&#34; # Uses: 101
&#34;\255\000\000\000\000\000\000\000&#34; # Uses: 101
&#34;U\012A &#34; # Uses: 94
&#34;\374\000\000\000\000\000\000\000&#34; # Uses: 86
&#34;\377\027&#34; # Uses: 85
&#34;\000\000\000\000\000\000\000*&#34; # Uses: 89
&#34;\025\000\000\000\000\000\000\000&#34; # Uses: 104
&#34;\000\000ci&#34; # Uses: 91
&#34;\001\000&#34; # Uses: 103
&#34;\037L_w&#34; # Uses: 97
&#34;\377\377\001\004&#34; # Uses: 97
&#34;\015\000\000\000&#34; # Uses: 82
&#34;\245\000\000\000\000\000\000\000&#34; # Uses: 80
&#34;\001\000\000\000\000\000\000:&#34; # Uses: 88
&#34;\377\377\377\377\377\377\377\035&#34; # Uses: 76
&#34;\007\003\000\000\000\000\000\000&#34; # Uses: 76
&#34;\377\377\377\377\377\377\001R&#34; # Uses: 105
&#34;w\001\000\000\000\000\000\000&#34; # Uses: 89
&#34;\377\377\377\377\377\377\377\237&#34; # Uses: 85
&#34;\016\000\000\000\000\000\000\000&#34; # Uses: 76
&#34;E\000\000\000\000\000\000\000&#34; # Uses: 73
&#34;\000\000\001\000&#34; # Uses: 74
&#34;\340\376\000\000&#34; # Uses: 71
&#34;\332\000\000\000\000\000\000\000&#34; # Uses: 62
&#34;\011\000\000\000\000\000\000\000&#34; # Uses: 58
&#34;\001\000\000\000\000\000\000-&#34; # Uses: 66
&#34;\377\377\377\377\377\377\377%&#34; # Uses: 54
&#34;\000\000\000\000\000\000\000s&#34; # Uses: 70
&#34;\377\377\377\377\377\377\377~&#34; # Uses: 69
&#34; \006&#34; # Uses: 60
&#34;\377-&#34; # Uses: 80
&#34;\027\000\000\000\000\000\000\000&#34; # Uses: 60
&#34;\001\000\000\004&#34; # Uses: 70
&#34;\000\000\000\000\000\000\000\035&#34; # Uses: 77
&#34;\232\000\000\000\000\000\000\000&#34; # Uses: 65
&#34;\000\000\000\000\000\000\000 &#34; # Uses: 63
&#34;\030\000\000\000&#34; # Uses: 58
&#34;\001\000\000\233&#34; # Uses: 49
&#34;\216\002\000\000&#34; # Uses: 64
&#34;\000\000\000\000\000\000\000\270&#34; # Uses: 55
&#34;b\000\000\000\000\000\000\000&#34; # Uses: 65
&#34;!\000\010\000&#34; # Uses: 48
&#34;\377\377\377\377\377\377\377^&#34; # Uses: 57
&#34;D\000\000\000\000\000\000\000&#34; # Uses: 42
&#34;\323\006\000\000&#34; # Uses: 37
&#34;it \001&#34; # Uses: 38
&#34;\377\377\377\377\377\377\377\031&#34; # Uses: 49
&#34;\031\000\000\000&#34; # Uses: 45
&#34;\377\377\377\377\377\377\377\264&#34; # Uses: 33
&#34;\001\002&#34; # Uses: 37
&#34;\377\377\377\377\377\377\377\250&#34; # Uses: 40
&#34;\377\377\377\011&#34; # Uses: 26
&#34;@\001\000\000\000\000\000\000&#34; # Uses: 32
&#34;&amp;\267\010G&#34; # Uses: 23
&#34;\317\001\000\000\000\000\000\000&#34; # Uses: 32
&#34;\207\000\000\000\000\000\000\000&#34; # Uses: 28
&#34;\003R s&#34; # Uses: 25
&#34;\372\267&#34; # Uses: 26
&#34;\032\001\000\000\000\000\000\000&#34; # Uses: 16
&#34;\000\017&#34; # Uses: 20
&#34;\001\000\000\000\000\000\000/&#34; # Uses: 22
&#34;\026\000\000\000\000\000\000\000&#34; # Uses: 16
&#34;\000\000\000\000\000\000\000L&#34; # Uses: 16
&#34;\001\000\000\000\000\000\000O&#34; # Uses: 14
&#34;\377\377\377\377\377\377\377A&#34; # Uses: 20
&#34;\002\000\000\000\000\000\000\000&#34; # Uses: 15
&#34;\000\000\020\000&#34; # Uses: 18
&#34;\313\000\000\000\000\000\000\000&#34; # Uses: 20
&#34;\377\377\377\377\377\377\000\230&#34; # Uses: 14
&#34;\377\377\377\377\377\377\377.&#34; # Uses: 6
&#34;\377\037h\001&#34; # Uses: 10
&#34;\014\000\000\000\000\000\000\000&#34; # Uses: 10
&#34;\000\000\000\024&#34; # Uses: 9
&#34;\377\377\376\377&#34; # Uses: 7
&#34;\000\000\000\000\000\000\000\007&#34; # Uses: 1
###### End of recommended dictionary. ######
Done 116457 runs in 31 second(s)
stat::number_of_executed_units: 116457
stat::average_exec_per_sec:     3756
stat::new_units_added:          1444
stat::slowest_unit_time_sec:    0
stat::peak_rss_mb:              60

</pre>

</body>